// Array 3D con new
int cubo3D[][][] = new int[2][3][4];

// Asignar valores
cubo3D[0][0][0] = 1;
cubo3D[0][0][1] = 2;
cubo3D[0][1][0] = 3;
cubo3D[1][2][3] = 24;

// Array 3D con lista de elementos
int cubo3D_2[][][] = {
    { // primer "bloque" de 3 filas de 4 columnas
        { 1, 2, 3, 4 },
        { 5, 6, 7, 8 },
        { 9, 10, 11, 12 }
    },
    { // segundo "bloque" de 3 filas de 4 columnas
        { 13, 14, 15, 16 },
        { 17, 18, 19, 20 },
        { 21, 22, 23, 24 }
    }
};

// Acceso a elementos
int valor = cubo3D_2[1][2][3];
System.out.println("Valor en cubo3D_2[1][2][3] = " + valor);

// Array 4D
int array4D[][][][] = new int[2][2][2][2];
array4D[1][1][1][1] = 42;

System.out.println("Valor en array4D[1][1][1][1] = " + array4D[1][1][1][1]);

// Array 5D con new - usando sintaxis postfija
int array5D_1[][][][][] = new int[2][2][2][2][2];

// Array 5D con new - usando sintaxis prefija  
int array5D_2[][][][][] = new int[2][3][2][2][2];

// Declaraci칩n sin inicializaci칩n
int array5D_3[][][][][];

// Asignar valores
array5D_1[0][0][0][0][0] = 100;
array5D_1[1][1][1][1][1] = 999;

array5D_2[0][1][0][1][0] = 42;
array5D_2[1][2][1][1][1] = 777;

// Acceder a elementos
int valor1 = array5D_1[0][0][0][0][0];
int valor2 = array5D_1[1][1][1][1][1];
int valor3 = array5D_2[0][1][0][1][0];
int valor4 = array5D_2[1][2][1][1][1];

// Imprimir resultados
System.out.println("array5D_1[0][0][0][0][0] = " + valor1);
System.out.println("array5D_1[1][1][1][1][1] = " + valor2);
System.out.println("array5D_2[0][1][0][1][0] = " + valor3);
System.out.println("array5D_2[1][2][1][1][1] = " + valor4);

// Array 5D con lista de elementos (estructura m치s compleja)
// 5D literal removido: actualmente solo soportan literales hasta 3D
// int cubo5D[][][][][] = { ... };

// Acceder a un elemento del array 5D con inicializaci칩n
// Acceso a literal 5D removido

// ===== PRUEBAS DE ARRAYS 6D =====

// Array 6D con new - usando sintaxis postfija
System.out.println("=== PRUEBAS 5D COMPLETADAS ===");
System.out.println("Tu parser ahora soporta arrays desde 1D hasta 5D!");