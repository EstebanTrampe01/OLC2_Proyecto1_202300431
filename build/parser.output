Terminales no usados en la gramática

    TOKEN_DBYTE
    TOKEN_DSHORT
    TOKEN_DLONG


La regla es inútil debido a los conflictos

   23 instruccion: error '}'


Estado 11 conflictos: 1 desplazamiento/reducción
Estado 65 conflictos: 36 reducción/reducción
Estado 100 conflictos: 1 desplazamiento/reducción
Estado 184 conflictos: 70 reducción/reducción
Estado 186 conflictos: 36 reducción/reducción
Estado 240 conflictos: 1 desplazamiento/reducción
Estado 275 conflictos: 1 desplazamiento/reducción


Gramática

    0 $accept: s $end

    1 s: lSentencia

    2 lSentencia: lSentencia instruccion
    3           | instruccion
    4           | lSentencia error '}'
    5           | error '}'

    6 instruccion: if_statement
    7            | switch_statement
    8            | break_statement
    9            | while_statement
   10            | for_statement
   11            | for_each_statement
   12            | imprimir ';'
   13            | bloque
   14            | declaracion_var ';'
   15            | funcion_declaracion
   16            | main_declaracion
   17            | return_stmt ';'
   18            | asignacion ';'
   19            | asignacion_elemento ';'
   20            | postfix ';'
   21            | continue_statement
   22            | error ';'
   23            | error '}'

   24 if_statement: TOKEN_IF '(' expr ')' bloque
   25             | TOKEN_IF '(' expr ')' bloque TOKEN_ELSE bloque
   26             | TOKEN_IF '(' expr ')' bloque TOKEN_ELSE if_statement
   27             | TOKEN_IF '(' expr ')' instruccion_simple ';'
   28             | TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE bloque
   29             | TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE if_statement

   30 switch_statement: TOKEN_SWITCH '(' expr ')' '{' case_list '}'
   31                 | TOKEN_SWITCH '(' expr ')' '{' case_list default_case '}'

   32 while_statement: TOKEN_WHILE '(' expr ')' bloque
   33                | TOKEN_WHILE '(' expr ')' instruccion_simple

   34 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' bloque_for
   35              | TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' instruccion_simple
   36              | TOKEN_FOR '(' declaracion_var ';' expr ';' ')' bloque_for
   37              | TOKEN_FOR '(' declaracion_var ';' expr ';' ')' instruccion_simple
   38              | TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' bloque
   39              | TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' instruccion_simple

   40 incremento: asignacion
   41           | TOKEN_IDENTIFIER TOKEN_PLUS_PLUS
   42           | TOKEN_IDENTIFIER TOKEN_MINUS_MINUS

   43 case_list: case_item
   44          | case_list case_item

   45 case_labels: TOKEN_CASE expr ':'
   46            | case_labels TOKEN_CASE expr ':'

   47 case_item: case_labels instrucciones_case
   48          | case_labels instrucciones_case TOKEN_BREAK ';'

   49 instrucciones_case: instruccion_case
   50                   | instrucciones_case instruccion_case

   51 instruccion_case: imprimir ';'
   52                 | bloque
   53                 | declaracion_var ';'
   54                 | asignacion ';'

   55 default_case: TOKEN_DEFAULT ':' instrucciones_case
   56             | TOKEN_DEFAULT ':' instrucciones_case TOKEN_BREAK ';'

   57 break_statement: TOKEN_BREAK ';'

   58 continue_statement: TOKEN_CONTINUE ';'

   59 instruccion_simple: imprimir
   60                   | declaracion_var
   61                   | asignacion

   62 asignacion: TOKEN_IDENTIFIER '=' expr
   63           | TOKEN_IDENTIFIER TOKEN_PLUS_ASSIGN expr
   64           | TOKEN_IDENTIFIER TOKEN_MINUS_ASSIGN expr
   65           | TOKEN_IDENTIFIER TOKEN_MUL_ASSIGN expr
   66           | TOKEN_IDENTIFIER TOKEN_DIV_ASSIGN expr
   67           | TOKEN_IDENTIFIER TOKEN_MOD_ASSIGN expr
   68           | TOKEN_IDENTIFIER TOKEN_AND_ASSIGN expr
   69           | TOKEN_IDENTIFIER TOKEN_OR_ASSIGN expr
   70           | TOKEN_IDENTIFIER TOKEN_XOR_ASSIGN expr
   71           | TOKEN_IDENTIFIER TOKEN_SHL_ASSIGN expr
   72           | TOKEN_IDENTIFIER TOKEN_SHR_ASSIGN expr

   73 lista_Expr: lista_Expr ',' expr
   74           | expr

   75 imprimir: TOKEN_PRINT '(' lista_Expr ')'
   76         | TOKEN_SYSTEM_OUT_PRINTLN '(' lista_Expr ')'
   77         | TOKEN_SYSTEM_OUT_PRINTLN '(' ')'

   78 bloque: '{' lSentencia '}'
   79       | '{' error '}'

   80 bloque_for: '{' lSentencia '}'

   81 declaracion_var: prefix_array_decl
   82                | postfix_array_decl
   83                | final_prefix_array_decl
   84                | final_postfix_array_decl
   85                | var_decl
   86                | final_var_decl

   87 $@1: ε

   88 prefix_array_decl: tipoPrimitivo prefix_dims TOKEN_IDENTIFIER $@1 array_prefix_init_opt

   89 $@2: ε

   90 postfix_array_decl: tipoPrimitivo TOKEN_IDENTIFIER postfix_dims $@2 array_postfix_init_opt

   91 $@3: ε

   92 final_prefix_array_decl: TOKEN_FINAL tipoPrimitivo prefix_dims TOKEN_IDENTIFIER $@3 array_prefix_init_opt

   93 $@4: ε

   94 final_postfix_array_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER postfix_dims $@4 array_postfix_init_opt

   95 var_decl: tipoPrimitivo TOKEN_IDENTIFIER '=' expr
   96         | tipoPrimitivo TOKEN_IDENTIFIER

   97 final_var_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER '=' expr

   98 array_prefix_init_opt: ε
   99                      | '=' TOKEN_NEW tipoPrimitivo dims_expr_list
  100                      | '=' '{' lista_Expr '}'
  101                      | '=' '{' filas_lista '}'
  102                      | '=' '{' lista_bloques2D '}'
  103                      | '=' '{' '}'
  104                      | '=' expr

  105 array_postfix_init_opt: array_prefix_init_opt

  106 prefix_dims: '[' ']'
  107            | prefix_dims '[' ']'

  108 postfix_dims: '[' ']'
  109             | postfix_dims '[' ']'

  110 dims_expr_list: '[' expr ']'
  111               | dims_expr_list '[' expr ']'

  112 lista_bloques2D: bloque2D
  113                | lista_bloques2D ',' bloque2D

  114 bloque2D: '{' filas_lista '}'

  115 filas_lista: fila_matriz
  116            | filas_lista ',' fila_matriz

  117 fila_matriz: '{' lista_Expr '}'

  118 asignacion_elemento: TOKEN_IDENTIFIER indices_una '=' expr
  119                    | TOKEN_IDENTIFIER indices_multi '=' expr

  120 indices_una: '[' expr ']'

  121 indices_multi: indices_una indices_una
  122              | indices_multi indices_una

  123 expr: expr '+' expr
  124     | expr '-' expr
  125     | expr '*' expr
  126     | expr '/' expr
  127     | expr '%' expr
  128     | expr '&' expr
  129     | expr '|' expr
  130     | expr '^' expr
  131     | expr TOKEN_SHIFT_LEFT expr
  132     | expr TOKEN_SHIFT_RIGHT expr
  133     | expr TOKEN_EQUAL expr
  134     | expr TOKEN_NOT_EQUAL expr
  135     | expr TOKEN_GREATER expr
  136     | expr TOKEN_LESS expr
  137     | expr TOKEN_GREATER_EQUAL expr
  138     | expr TOKEN_LESS_EQUAL expr
  139     | expr TOKEN_AND expr
  140     | expr TOKEN_OR expr
  141     | TOKEN_NOT expr
  142     | '-' expr
  143     | postfix

  144 postfix: unary
  145        | postfix '[' expr ']'
  146        | postfix '.' TOKEN_LENGTH
  147        | postfix '.' TOKEN_ADD '(' expr ')'
  148        | postfix '.' TOKEN_IDENTIFIER '(' expr ')'
  149        | postfix '.' TOKEN_IDENTIFIER '(' ')'
  150        | TOKEN_IDENTIFIER TOKEN_PLUS_PLUS
  151        | TOKEN_IDENTIFIER TOKEN_MINUS_MINUS

  152 unary: atom
  153      | '(' tipoPrimitivo ')' postfix

  154 atom: primitivo
  155     | '(' expr ')'
  156     | TOKEN_IDENTIFIER
  157     | llamada_funcion
  158     | TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' expr ',' expr ')'
  159     | TOKEN_INTEGER_CLASS '.' TOKEN_PARSE_INT '(' expr ')'
  160     | TOKEN_DOUBLE_CLASS '.' TOKEN_PARSE_DOUBLE '(' expr ')'
  161     | TOKEN_FLOAT_CLASS '.' TOKEN_PARSE_FLOAT '(' expr ')'
  162     | TOKEN_DSTRING '.' TOKEN_VALUE_OF '(' expr ')'
  163     | TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' expr ')'
  164     | TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' join_variadic_args ')'

  165 join_variadic_args: expr ',' lista_Expr

  166 primitivo: TOKEN_UNSIGNED_INTEGER
  167          | TOKEN_STRING
  168          | TOKEN_REAL_FLOAT
  169          | TOKEN_REAL
  170          | TOKEN_CHAR_LITERAL
  171          | TOKEN_TRUE
  172          | TOKEN_FALSE
  173          | TOKEN_NULL

  174 tipoPrimitivo: TOKEN_DINT
  175              | TOKEN_DFLOAT
  176              | TOKEN_DDOUBLE
  177              | TOKEN_DSTRING
  178              | TOKEN_DBOOLEAN
  179              | TOKEN_DCHAR
  180              | TOKEN_DVOID

  181 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER '(' param_opt ')' bloque

  182 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt ')' bloque

  183 main_params_opt: ε
  184                | main_params

  185 main_params: main_param
  186            | main_params ',' main_param

  187 main_param: tipoPrimitivo main_param_array_brackets TOKEN_IDENTIFIER

  188 main_param_array_brackets: ε
  189                          | main_param_array_brackets '[' ']'

  190 param_opt: ε
  191          | lista_parametros

  192 param_array_brackets: ε
  193                     | param_array_brackets '[' ']'

  194 lista_parametros: tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER
  195                 | lista_parametros ',' tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER

  196 return_stmt: TOKEN_RETURN
  197            | TOKEN_RETURN expr

  198 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque
  199                   | TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

  200 argumentos_opt: ε
  201               | lista_Expr

  202 llamada_funcion: TOKEN_IDENTIFIER '(' argumentos_opt ')'


Terminales con las reglas donde aparecen

    $end (0) 0
    '%' (37) 127
    '&' (38) 128
    '(' (40) 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 75 76 77 147 148 149 153 155 158 159 160 161 162 163 164 181 182 198 199 202
    ')' (41) 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 75 76 77 147 148 149 153 155 158 159 160 161 162 163 164 181 182 198 199 202
    '*' (42) 125
    '+' (43) 123
    ',' (44) 73 113 116 158 163 164 165 186 195
    '-' (45) 124 142
    '.' (46) 146 147 148 149 158 159 160 161 162 163 164
    '/' (47) 126
    ':' (58) 45 46 55 56 198 199
    ';' (59) 12 14 17 18 19 20 22 27 28 29 34 35 36 37 38 39 48 51 53 54 56 57 58
    '=' (61) 62 95 97 99 100 101 102 103 104 118 119
    '[' (91) 106 107 108 109 110 111 120 145 189 193 199
    ']' (93) 106 107 108 109 110 111 120 145 189 193 199
    '^' (94) 130
    '{' (123) 30 31 78 79 80 100 101 102 103 114 117
    '|' (124) 129
    '}' (125) 4 5 23 30 31 78 79 80 100 101 102 103 114 117
    error (256) 4 5 22 23 79
    TOKEN_PRINT <string> (258) 75
    TOKEN_DINT <string> (259) 174
    TOKEN_DFLOAT <string> (260) 175
    TOKEN_DBYTE <string> (261)
    TOKEN_DSHORT <string> (262)
    TOKEN_DLONG <string> (263)
    TOKEN_DDOUBLE <string> (264) 176
    TOKEN_DSTRING <string> (265) 162 163 164 177
    TOKEN_UNSIGNED_INTEGER <string> (266) 166
    TOKEN_REAL <string> (267) 169
    TOKEN_REAL_FLOAT <string> (268) 168
    TOKEN_STRING <string> (269) 167
    TOKEN_IDENTIFIER <string> (270) 41 42 62 63 64 65 66 67 68 69 70 71 72 88 90 92 94 95 96 97 118 119 148 149 150 151 156 181 182 187 194 195 198 199 202
    TOKEN_TRUE <string> (271) 171
    TOKEN_FALSE <string> (272) 172
    TOKEN_DBOOLEAN <string> (273) 178
    TOKEN_DCHAR <string> (274) 179
    TOKEN_CHAR_LITERAL <string> (275) 170
    TOKEN_FINAL <string> (276) 92 94 97
    TOKEN_SYSTEM_OUT_PRINTLN <string> (277) 76 77
    TOKEN_DVOID <string> (278) 180 182
    TOKEN_NULL (279) 173
    TOKEN_SHIFT_LEFT (280) 131
    TOKEN_SHIFT_RIGHT (281) 132
    TOKEN_INTEGER_CLASS (282) 159
    TOKEN_DOUBLE_CLASS (283) 160
    TOKEN_FLOAT_CLASS (284) 161
    TOKEN_ARRAYS (285) 158
    TOKEN_PARSE_INT (286) 159
    TOKEN_PARSE_DOUBLE (287) 160
    TOKEN_PARSE_FLOAT (288) 161
    TOKEN_VALUE_OF (289) 162
    TOKEN_JOIN (290) 163 164
    TOKEN_LENGTH (291) 146
    TOKEN_ADD (292) 147
    TOKEN_INDEXOF (293) 158
    TOKEN_PLUS_PLUS (294) 41 150
    TOKEN_MINUS_MINUS (295) 42 151
    TOKEN_PLUS_ASSIGN (296) 63
    TOKEN_MINUS_ASSIGN (297) 64
    TOKEN_MUL_ASSIGN (298) 65
    TOKEN_DIV_ASSIGN (299) 66
    TOKEN_MOD_ASSIGN (300) 67
    TOKEN_AND_ASSIGN (301) 68
    TOKEN_OR_ASSIGN (302) 69
    TOKEN_XOR_ASSIGN (303) 70
    TOKEN_SHL_ASSIGN (304) 71
    TOKEN_SHR_ASSIGN (305) 72
    TOKEN_EQUAL (306) 133
    TOKEN_NOT_EQUAL (307) 134
    TOKEN_GREATER (308) 135
    TOKEN_LESS (309) 136
    TOKEN_GREATER_EQUAL (310) 137
    TOKEN_LESS_EQUAL (311) 138
    TOKEN_AND (312) 139
    TOKEN_OR (313) 140
    TOKEN_NOT (314) 141
    TOKEN_IF (315) 24 25 26 27 28 29
    TOKEN_ELSE (316) 25 26 28 29
    TOKEN_SWITCH (317) 30 31
    TOKEN_CASE (318) 45 46
    TOKEN_DEFAULT (319) 55 56
    TOKEN_BREAK (320) 48 56 57
    TOKEN_WHILE (321) 32 33
    TOKEN_FOR (322) 34 35 36 37 38 39 198 199
    TOKEN_CONTINUE (323) 58
    TOKEN_NEW (324) 99
    TOKEN_RETURN (325) 196 197
    TOKEN_PUBLIC (326) 182
    TOKEN_STATIC (327) 182
    NEG (328)
    CAST (329)


No terminales con las reglas donde aparecen

    $accept (94)
        on left: 0
    s <nodo> (95)
        on left: 1
        on right: 0
    lSentencia <nodo> (96)
        on left: 2 3 4 5
        on right: 1 2 4 78 80
    instruccion <nodo> (97)
        on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 2 3
    if_statement <nodo> (98)
        on left: 24 25 26 27 28 29
        on right: 6 26 29
    switch_statement <nodo> (99)
        on left: 30 31
        on right: 7
    while_statement <nodo> (100)
        on left: 32 33
        on right: 9
    for_statement <nodo> (101)
        on left: 34 35 36 37 38 39
        on right: 10
    incremento <nodo> (102)
        on left: 40 41 42
        on right: 34 35 38 39
    case_list <nodo> (103)
        on left: 43 44
        on right: 30 31 44
    case_labels <nodo> (104)
        on left: 45 46
        on right: 46 47 48
    case_item <nodo> (105)
        on left: 47 48
        on right: 43 44
    instrucciones_case <nodo> (106)
        on left: 49 50
        on right: 47 48 50 55 56
    instruccion_case <nodo> (107)
        on left: 51 52 53 54
        on right: 49 50
    default_case <nodo> (108)
        on left: 55 56
        on right: 31
    break_statement <nodo> (109)
        on left: 57
        on right: 8
    continue_statement <nodo> (110)
        on left: 58
        on right: 21
    instruccion_simple <nodo> (111)
        on left: 59 60 61
        on right: 27 28 29 33 35 37 39
    asignacion <nodo> (112)
        on left: 62 63 64 65 66 67 68 69 70 71 72
        on right: 18 38 39 40 54 61
    lista_Expr <nodo> (113)
        on left: 73 74
        on right: 73 75 76 100 117 165 201
    imprimir <nodo> (114)
        on left: 75 76 77
        on right: 12 51 59
    bloque <nodo> (115)
        on left: 78 79
        on right: 13 24 25 26 28 32 38 52 181 182 198 199
    bloque_for <nodo> (116)
        on left: 80
        on right: 34 36
    declaracion_var <nodo> (117)
        on left: 81 82 83 84 85 86
        on right: 14 34 35 36 37 53 60
    prefix_array_decl <nodo> (118)
        on left: 88
        on right: 81
    $@1 (119)
        on left: 87
        on right: 88
    postfix_array_decl <nodo> (120)
        on left: 90
        on right: 82
    $@2 (121)
        on left: 89
        on right: 90
    final_prefix_array_decl <nodo> (122)
        on left: 92
        on right: 83
    $@3 (123)
        on left: 91
        on right: 92
    final_postfix_array_decl <nodo> (124)
        on left: 94
        on right: 84
    $@4 (125)
        on left: 93
        on right: 94
    var_decl <nodo> (126)
        on left: 95 96
        on right: 85
    final_var_decl <nodo> (127)
        on left: 97
        on right: 86
    array_prefix_init_opt <nodo> (128)
        on left: 98 99 100 101 102 103 104
        on right: 88 92 105
    array_postfix_init_opt <nodo> (129)
        on left: 105
        on right: 90 94
    prefix_dims <boolean> (130)
        on left: 106 107
        on right: 88 92 107
    postfix_dims <boolean> (131)
        on left: 108 109
        on right: 90 94 109
    dims_expr_list <nodo> (132)
        on left: 110 111
        on right: 99 111
    lista_bloques2D <nodo> (133)
        on left: 112 113
        on right: 102 113
    bloque2D <nodo> (134)
        on left: 114
        on right: 112 113
    filas_lista <nodo> (135)
        on left: 115 116
        on right: 101 114 116
    fila_matriz <nodo> (136)
        on left: 117
        on right: 115 116
    asignacion_elemento <nodo> (137)
        on left: 118 119
        on right: 19
    indices_una <nodo> (138)
        on left: 120
        on right: 118 121 122
    indices_multi <nodo> (139)
        on left: 121 122
        on right: 119 122
    expr <nodo> (140)
        on left: 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
        on right: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 45 46 62 63 64 65 66 67 68 69 70 71 72 73 74 95 97 104 110 111 118 119 120 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 145 147 148 155 158 159 160 161 162 163 164 165 197
    postfix <nodo> (141)
        on left: 144 145 146 147 148 149 150 151
        on right: 20 143 145 146 147 148 149 153
    unary <nodo> (142)
        on left: 152 153
        on right: 144
    atom <nodo> (143)
        on left: 154 155 156 157 158 159 160 161 162 163 164
        on right: 152
    join_variadic_args <nodo> (144)
        on left: 165
        on right: 164
    primitivo <nodo> (145)
        on left: 166 167 168 169 170 171 172 173
        on right: 154
    tipoPrimitivo <tipoDato> (146)
        on left: 174 175 176 177 178 179 180
        on right: 88 90 92 94 95 96 97 99 153 181 187 194 195 198 199
    funcion_declaracion <nodo> (147)
        on left: 181
        on right: 15
    main_declaracion <nodo> (148)
        on left: 182
        on right: 16
    main_params_opt (149)
        on left: 183 184
        on right: 182
    main_params (150)
        on left: 185 186
        on right: 184 186
    main_param (151)
        on left: 187
        on right: 185 186
    main_param_array_brackets (152)
        on left: 188 189
        on right: 187 189
    param_opt <paramList> (153)
        on left: 190 191
        on right: 181
    param_array_brackets <boolean> (154)
        on left: 192 193
        on right: 193 194 195
    lista_parametros <paramList> (155)
        on left: 194 195
        on right: 191 195
    return_stmt <nodo> (156)
        on left: 196 197
        on right: 17
    for_each_statement <nodo> (157)
        on left: 198 199
        on right: 11
    argumentos_opt <nodo> (158)
        on left: 200 201
        on right: 202
    llamada_funcion <nodo> (159)
        on left: 202
        on right: 157


Estado 0

    0 $accept: • s $end

    error                     desplazar e ir al estado 1
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    TOKEN_NULL                desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 23
    TOKEN_ARRAYS              desplazar e ir al estado 24
    TOKEN_IF                  desplazar e ir al estado 25
    TOKEN_SWITCH              desplazar e ir al estado 26
    TOKEN_BREAK               desplazar e ir al estado 27
    TOKEN_WHILE               desplazar e ir al estado 28
    TOKEN_FOR                 desplazar e ir al estado 29
    TOKEN_CONTINUE            desplazar e ir al estado 30
    TOKEN_RETURN              desplazar e ir al estado 31
    TOKEN_PUBLIC              desplazar e ir al estado 32
    '('                       desplazar e ir al estado 33
    '{'                       desplazar e ir al estado 34

    s                         ir al estado 35
    lSentencia                ir al estado 36
    instruccion               ir al estado 37
    if_statement              ir al estado 38
    switch_statement          ir al estado 39
    while_statement           ir al estado 40
    for_statement             ir al estado 41
    break_statement           ir al estado 42
    continue_statement        ir al estado 43
    asignacion                ir al estado 44
    imprimir                  ir al estado 45
    bloque                    ir al estado 46
    declaracion_var           ir al estado 47
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    asignacion_elemento       ir al estado 54
    postfix                   ir al estado 55
    unary                     ir al estado 56
    atom                      ir al estado 57
    primitivo                 ir al estado 58
    tipoPrimitivo             ir al estado 59
    funcion_declaracion       ir al estado 60
    main_declaracion          ir al estado 61
    return_stmt               ir al estado 62
    for_each_statement        ir al estado 63
    llamada_funcion           ir al estado 64


Estado 1

    5 lSentencia: error • '}'
   22 instruccion: error • ';'
   23            | error • '}'

    '}'  desplazar e ir al estado 65
    ';'  desplazar e ir al estado 66


Estado 2

   75 imprimir: TOKEN_PRINT • '(' lista_Expr ')'

    '('  desplazar e ir al estado 67


Estado 3

  174 tipoPrimitivo: TOKEN_DINT •

    $default  reduce usando la regla 174 (tipoPrimitivo)


Estado 4

  175 tipoPrimitivo: TOKEN_DFLOAT •

    $default  reduce usando la regla 175 (tipoPrimitivo)


Estado 5

  176 tipoPrimitivo: TOKEN_DDOUBLE •

    $default  reduce usando la regla 176 (tipoPrimitivo)


Estado 6

  162 atom: TOKEN_DSTRING • '.' TOKEN_VALUE_OF '(' expr ')'
  163     | TOKEN_DSTRING • '.' TOKEN_JOIN '(' expr ',' expr ')'
  164     | TOKEN_DSTRING • '.' TOKEN_JOIN '(' expr ',' join_variadic_args ')'
  177 tipoPrimitivo: TOKEN_DSTRING •

    '.'  desplazar e ir al estado 68

    $default  reduce usando la regla 177 (tipoPrimitivo)


Estado 7

  166 primitivo: TOKEN_UNSIGNED_INTEGER •

    $default  reduce usando la regla 166 (primitivo)


Estado 8

  169 primitivo: TOKEN_REAL •

    $default  reduce usando la regla 169 (primitivo)


Estado 9

  168 primitivo: TOKEN_REAL_FLOAT •

    $default  reduce usando la regla 168 (primitivo)


Estado 10

  167 primitivo: TOKEN_STRING •

    $default  reduce usando la regla 167 (primitivo)


Estado 11

   62 asignacion: TOKEN_IDENTIFIER • '=' expr
   63           | TOKEN_IDENTIFIER • TOKEN_PLUS_ASSIGN expr
   64           | TOKEN_IDENTIFIER • TOKEN_MINUS_ASSIGN expr
   65           | TOKEN_IDENTIFIER • TOKEN_MUL_ASSIGN expr
   66           | TOKEN_IDENTIFIER • TOKEN_DIV_ASSIGN expr
   67           | TOKEN_IDENTIFIER • TOKEN_MOD_ASSIGN expr
   68           | TOKEN_IDENTIFIER • TOKEN_AND_ASSIGN expr
   69           | TOKEN_IDENTIFIER • TOKEN_OR_ASSIGN expr
   70           | TOKEN_IDENTIFIER • TOKEN_XOR_ASSIGN expr
   71           | TOKEN_IDENTIFIER • TOKEN_SHL_ASSIGN expr
   72           | TOKEN_IDENTIFIER • TOKEN_SHR_ASSIGN expr
  118 asignacion_elemento: TOKEN_IDENTIFIER • indices_una '=' expr
  119                    | TOKEN_IDENTIFIER • indices_multi '=' expr
  150 postfix: TOKEN_IDENTIFIER • TOKEN_PLUS_PLUS
  151        | TOKEN_IDENTIFIER • TOKEN_MINUS_MINUS
  156 atom: TOKEN_IDENTIFIER •
  202 llamada_funcion: TOKEN_IDENTIFIER • '(' argumentos_opt ')'

    TOKEN_PLUS_PLUS     desplazar e ir al estado 69
    TOKEN_MINUS_MINUS   desplazar e ir al estado 70
    TOKEN_PLUS_ASSIGN   desplazar e ir al estado 71
    TOKEN_MINUS_ASSIGN  desplazar e ir al estado 72
    TOKEN_MUL_ASSIGN    desplazar e ir al estado 73
    TOKEN_DIV_ASSIGN    desplazar e ir al estado 74
    TOKEN_MOD_ASSIGN    desplazar e ir al estado 75
    TOKEN_AND_ASSIGN    desplazar e ir al estado 76
    TOKEN_OR_ASSIGN     desplazar e ir al estado 77
    TOKEN_XOR_ASSIGN    desplazar e ir al estado 78
    TOKEN_SHL_ASSIGN    desplazar e ir al estado 79
    TOKEN_SHR_ASSIGN    desplazar e ir al estado 80
    '('                 desplazar e ir al estado 81
    '='                 desplazar e ir al estado 82
    '['                 desplazar e ir al estado 83

    '['       [reduce usando la regla 156 (atom)]
    $default  reduce usando la regla 156 (atom)

    indices_una    ir al estado 84
    indices_multi  ir al estado 85


Estado 12

  171 primitivo: TOKEN_TRUE •

    $default  reduce usando la regla 171 (primitivo)


Estado 13

  172 primitivo: TOKEN_FALSE •

    $default  reduce usando la regla 172 (primitivo)


Estado 14

  178 tipoPrimitivo: TOKEN_DBOOLEAN •

    $default  reduce usando la regla 178 (tipoPrimitivo)


Estado 15

  179 tipoPrimitivo: TOKEN_DCHAR •

    $default  reduce usando la regla 179 (tipoPrimitivo)


Estado 16

  170 primitivo: TOKEN_CHAR_LITERAL •

    $default  reduce usando la regla 170 (primitivo)


Estado 17

   92 final_prefix_array_decl: TOKEN_FINAL • tipoPrimitivo prefix_dims TOKEN_IDENTIFIER $@3 array_prefix_init_opt
   94 final_postfix_array_decl: TOKEN_FINAL • tipoPrimitivo TOKEN_IDENTIFIER postfix_dims $@4 array_postfix_init_opt
   97 final_var_decl: TOKEN_FINAL • tipoPrimitivo TOKEN_IDENTIFIER '=' expr

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 19

    tipoPrimitivo  ir al estado 87


Estado 18

   76 imprimir: TOKEN_SYSTEM_OUT_PRINTLN • '(' lista_Expr ')'
   77         | TOKEN_SYSTEM_OUT_PRINTLN • '(' ')'

    '('  desplazar e ir al estado 88


Estado 19

  180 tipoPrimitivo: TOKEN_DVOID •

    $default  reduce usando la regla 180 (tipoPrimitivo)


Estado 20

  173 primitivo: TOKEN_NULL •

    $default  reduce usando la regla 173 (primitivo)


Estado 21

  159 atom: TOKEN_INTEGER_CLASS • '.' TOKEN_PARSE_INT '(' expr ')'

    '.'  desplazar e ir al estado 89


Estado 22

  160 atom: TOKEN_DOUBLE_CLASS • '.' TOKEN_PARSE_DOUBLE '(' expr ')'

    '.'  desplazar e ir al estado 90


Estado 23

  161 atom: TOKEN_FLOAT_CLASS • '.' TOKEN_PARSE_FLOAT '(' expr ')'

    '.'  desplazar e ir al estado 91


Estado 24

  158 atom: TOKEN_ARRAYS • '.' TOKEN_INDEXOF '(' expr ',' expr ')'

    '.'  desplazar e ir al estado 92


Estado 25

   24 if_statement: TOKEN_IF • '(' expr ')' bloque
   25             | TOKEN_IF • '(' expr ')' bloque TOKEN_ELSE bloque
   26             | TOKEN_IF • '(' expr ')' bloque TOKEN_ELSE if_statement
   27             | TOKEN_IF • '(' expr ')' instruccion_simple ';'
   28             | TOKEN_IF • '(' expr ')' instruccion_simple ';' TOKEN_ELSE bloque
   29             | TOKEN_IF • '(' expr ')' instruccion_simple ';' TOKEN_ELSE if_statement

    '('  desplazar e ir al estado 93


Estado 26

   30 switch_statement: TOKEN_SWITCH • '(' expr ')' '{' case_list '}'
   31                 | TOKEN_SWITCH • '(' expr ')' '{' case_list default_case '}'

    '('  desplazar e ir al estado 94


Estado 27

   57 break_statement: TOKEN_BREAK • ';'

    ';'  desplazar e ir al estado 95


Estado 28

   32 while_statement: TOKEN_WHILE • '(' expr ')' bloque
   33                | TOKEN_WHILE • '(' expr ')' instruccion_simple

    '('  desplazar e ir al estado 96


Estado 29

   34 for_statement: TOKEN_FOR • '(' declaracion_var ';' expr ';' incremento ')' bloque_for
   35              | TOKEN_FOR • '(' declaracion_var ';' expr ';' incremento ')' instruccion_simple
   36              | TOKEN_FOR • '(' declaracion_var ';' expr ';' ')' bloque_for
   37              | TOKEN_FOR • '(' declaracion_var ';' expr ';' ')' instruccion_simple
   38              | TOKEN_FOR • '(' asignacion ';' expr ';' incremento ')' bloque
   39              | TOKEN_FOR • '(' asignacion ';' expr ';' incremento ')' instruccion_simple
  198 for_each_statement: TOKEN_FOR • '(' tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque
  199                   | TOKEN_FOR • '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

    '('  desplazar e ir al estado 97


Estado 30

   58 continue_statement: TOKEN_CONTINUE • ';'

    ';'  desplazar e ir al estado 98


Estado 31

  196 return_stmt: TOKEN_RETURN •
  197            | TOKEN_RETURN • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    $default  reduce usando la regla 196 (return_stmt)

    expr             ir al estado 103
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 32

  182 main_declaracion: TOKEN_PUBLIC • TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt ')' bloque

    TOKEN_STATIC  desplazar e ir al estado 105


Estado 33

  153 unary: '(' • tipoPrimitivo ')' postfix
  155 atom: '(' • expr ')'

    TOKEN_DINT              desplazar e ir al estado 3
    TOKEN_DFLOAT            desplazar e ir al estado 4
    TOKEN_DDOUBLE           desplazar e ir al estado 5
    TOKEN_DSTRING           desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_DBOOLEAN          desplazar e ir al estado 14
    TOKEN_DCHAR             desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_DVOID             desplazar e ir al estado 19
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 106
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    tipoPrimitivo    ir al estado 107
    llamada_funcion  ir al estado 64


Estado 34

   78 bloque: '{' • lSentencia '}'
   79       | '{' • error '}'

    error                     desplazar e ir al estado 108
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    TOKEN_NULL                desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 23
    TOKEN_ARRAYS              desplazar e ir al estado 24
    TOKEN_IF                  desplazar e ir al estado 25
    TOKEN_SWITCH              desplazar e ir al estado 26
    TOKEN_BREAK               desplazar e ir al estado 27
    TOKEN_WHILE               desplazar e ir al estado 28
    TOKEN_FOR                 desplazar e ir al estado 29
    TOKEN_CONTINUE            desplazar e ir al estado 30
    TOKEN_RETURN              desplazar e ir al estado 31
    TOKEN_PUBLIC              desplazar e ir al estado 32
    '('                       desplazar e ir al estado 33
    '{'                       desplazar e ir al estado 34

    lSentencia                ir al estado 109
    instruccion               ir al estado 37
    if_statement              ir al estado 38
    switch_statement          ir al estado 39
    while_statement           ir al estado 40
    for_statement             ir al estado 41
    break_statement           ir al estado 42
    continue_statement        ir al estado 43
    asignacion                ir al estado 44
    imprimir                  ir al estado 45
    bloque                    ir al estado 46
    declaracion_var           ir al estado 47
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    asignacion_elemento       ir al estado 54
    postfix                   ir al estado 55
    unary                     ir al estado 56
    atom                      ir al estado 57
    primitivo                 ir al estado 58
    tipoPrimitivo             ir al estado 59
    funcion_declaracion       ir al estado 60
    main_declaracion          ir al estado 61
    return_stmt               ir al estado 62
    for_each_statement        ir al estado 63
    llamada_funcion           ir al estado 64


Estado 35

    0 $accept: s • $end

    $end  desplazar e ir al estado 110


Estado 36

    1 s: lSentencia •
    2 lSentencia: lSentencia • instruccion
    4           | lSentencia • error '}'

    error                     desplazar e ir al estado 111
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    TOKEN_NULL                desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 23
    TOKEN_ARRAYS              desplazar e ir al estado 24
    TOKEN_IF                  desplazar e ir al estado 25
    TOKEN_SWITCH              desplazar e ir al estado 26
    TOKEN_BREAK               desplazar e ir al estado 27
    TOKEN_WHILE               desplazar e ir al estado 28
    TOKEN_FOR                 desplazar e ir al estado 29
    TOKEN_CONTINUE            desplazar e ir al estado 30
    TOKEN_RETURN              desplazar e ir al estado 31
    TOKEN_PUBLIC              desplazar e ir al estado 32
    '('                       desplazar e ir al estado 33
    '{'                       desplazar e ir al estado 34

    $end  reduce usando la regla 1 (s)

    instruccion               ir al estado 112
    if_statement              ir al estado 38
    switch_statement          ir al estado 39
    while_statement           ir al estado 40
    for_statement             ir al estado 41
    break_statement           ir al estado 42
    continue_statement        ir al estado 43
    asignacion                ir al estado 44
    imprimir                  ir al estado 45
    bloque                    ir al estado 46
    declaracion_var           ir al estado 47
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    asignacion_elemento       ir al estado 54
    postfix                   ir al estado 55
    unary                     ir al estado 56
    atom                      ir al estado 57
    primitivo                 ir al estado 58
    tipoPrimitivo             ir al estado 59
    funcion_declaracion       ir al estado 60
    main_declaracion          ir al estado 61
    return_stmt               ir al estado 62
    for_each_statement        ir al estado 63
    llamada_funcion           ir al estado 64


Estado 37

    3 lSentencia: instruccion •

    $default  reduce usando la regla 3 (lSentencia)


Estado 38

    6 instruccion: if_statement •

    $default  reduce usando la regla 6 (instruccion)


Estado 39

    7 instruccion: switch_statement •

    $default  reduce usando la regla 7 (instruccion)


Estado 40

    9 instruccion: while_statement •

    $default  reduce usando la regla 9 (instruccion)


Estado 41

   10 instruccion: for_statement •

    $default  reduce usando la regla 10 (instruccion)


Estado 42

    8 instruccion: break_statement •

    $default  reduce usando la regla 8 (instruccion)


Estado 43

   21 instruccion: continue_statement •

    $default  reduce usando la regla 21 (instruccion)


Estado 44

   18 instruccion: asignacion • ';'

    ';'  desplazar e ir al estado 113


Estado 45

   12 instruccion: imprimir • ';'

    ';'  desplazar e ir al estado 114


Estado 46

   13 instruccion: bloque •

    $default  reduce usando la regla 13 (instruccion)


Estado 47

   14 instruccion: declaracion_var • ';'

    ';'  desplazar e ir al estado 115


Estado 48

   81 declaracion_var: prefix_array_decl •

    $default  reduce usando la regla 81 (declaracion_var)


Estado 49

   82 declaracion_var: postfix_array_decl •

    $default  reduce usando la regla 82 (declaracion_var)


Estado 50

   83 declaracion_var: final_prefix_array_decl •

    $default  reduce usando la regla 83 (declaracion_var)


Estado 51

   84 declaracion_var: final_postfix_array_decl •

    $default  reduce usando la regla 84 (declaracion_var)


Estado 52

   85 declaracion_var: var_decl •

    $default  reduce usando la regla 85 (declaracion_var)


Estado 53

   86 declaracion_var: final_var_decl •

    $default  reduce usando la regla 86 (declaracion_var)


Estado 54

   19 instruccion: asignacion_elemento • ';'

    ';'  desplazar e ir al estado 116


Estado 55

   20 instruccion: postfix • ';'
  145 postfix: postfix • '[' expr ']'
  146        | postfix • '.' TOKEN_LENGTH
  147        | postfix • '.' TOKEN_ADD '(' expr ')'
  148        | postfix • '.' TOKEN_IDENTIFIER '(' expr ')'
  149        | postfix • '.' TOKEN_IDENTIFIER '(' ')'

    '.'  desplazar e ir al estado 117
    ';'  desplazar e ir al estado 118
    '['  desplazar e ir al estado 119


Estado 56

  144 postfix: unary •

    $default  reduce usando la regla 144 (postfix)


Estado 57

  152 unary: atom •

    $default  reduce usando la regla 152 (unary)


Estado 58

  154 atom: primitivo •

    $default  reduce usando la regla 154 (atom)


Estado 59

   88 prefix_array_decl: tipoPrimitivo • prefix_dims TOKEN_IDENTIFIER $@1 array_prefix_init_opt
   90 postfix_array_decl: tipoPrimitivo • TOKEN_IDENTIFIER postfix_dims $@2 array_postfix_init_opt
   95 var_decl: tipoPrimitivo • TOKEN_IDENTIFIER '=' expr
   96         | tipoPrimitivo • TOKEN_IDENTIFIER
  181 funcion_declaracion: tipoPrimitivo • TOKEN_IDENTIFIER '(' param_opt ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 120
    '['               desplazar e ir al estado 121

    prefix_dims  ir al estado 122


Estado 60

   15 instruccion: funcion_declaracion •

    $default  reduce usando la regla 15 (instruccion)


Estado 61

   16 instruccion: main_declaracion •

    $default  reduce usando la regla 16 (instruccion)


Estado 62

   17 instruccion: return_stmt • ';'

    ';'  desplazar e ir al estado 123


Estado 63

   11 instruccion: for_each_statement •

    $default  reduce usando la regla 11 (instruccion)


Estado 64

  157 atom: llamada_funcion •

    $default  reduce usando la regla 157 (atom)


Estado 65

    5 lSentencia: error '}' •
   23 instruccion: error '}' •

    $end                      reduce usando la regla 5 (lSentencia)
    $end                      [reduce usando la regla 23 (instruccion)]
    error                     reduce usando la regla 5 (lSentencia)
    error                     [reduce usando la regla 23 (instruccion)]
    TOKEN_PRINT               reduce usando la regla 5 (lSentencia)
    TOKEN_PRINT               [reduce usando la regla 23 (instruccion)]
    TOKEN_DINT                reduce usando la regla 5 (lSentencia)
    TOKEN_DINT                [reduce usando la regla 23 (instruccion)]
    TOKEN_DFLOAT              reduce usando la regla 5 (lSentencia)
    TOKEN_DFLOAT              [reduce usando la regla 23 (instruccion)]
    TOKEN_DDOUBLE             reduce usando la regla 5 (lSentencia)
    TOKEN_DDOUBLE             [reduce usando la regla 23 (instruccion)]
    TOKEN_DSTRING             reduce usando la regla 5 (lSentencia)
    TOKEN_DSTRING             [reduce usando la regla 23 (instruccion)]
    TOKEN_UNSIGNED_INTEGER    reduce usando la regla 5 (lSentencia)
    TOKEN_UNSIGNED_INTEGER    [reduce usando la regla 23 (instruccion)]
    TOKEN_REAL                reduce usando la regla 5 (lSentencia)
    TOKEN_REAL                [reduce usando la regla 23 (instruccion)]
    TOKEN_REAL_FLOAT          reduce usando la regla 5 (lSentencia)
    TOKEN_REAL_FLOAT          [reduce usando la regla 23 (instruccion)]
    TOKEN_STRING              reduce usando la regla 5 (lSentencia)
    TOKEN_STRING              [reduce usando la regla 23 (instruccion)]
    TOKEN_IDENTIFIER          reduce usando la regla 5 (lSentencia)
    TOKEN_IDENTIFIER          [reduce usando la regla 23 (instruccion)]
    TOKEN_TRUE                reduce usando la regla 5 (lSentencia)
    TOKEN_TRUE                [reduce usando la regla 23 (instruccion)]
    TOKEN_FALSE               reduce usando la regla 5 (lSentencia)
    TOKEN_FALSE               [reduce usando la regla 23 (instruccion)]
    TOKEN_DBOOLEAN            reduce usando la regla 5 (lSentencia)
    TOKEN_DBOOLEAN            [reduce usando la regla 23 (instruccion)]
    TOKEN_DCHAR               reduce usando la regla 5 (lSentencia)
    TOKEN_DCHAR               [reduce usando la regla 23 (instruccion)]
    TOKEN_CHAR_LITERAL        reduce usando la regla 5 (lSentencia)
    TOKEN_CHAR_LITERAL        [reduce usando la regla 23 (instruccion)]
    TOKEN_FINAL               reduce usando la regla 5 (lSentencia)
    TOKEN_FINAL               [reduce usando la regla 23 (instruccion)]
    TOKEN_SYSTEM_OUT_PRINTLN  reduce usando la regla 5 (lSentencia)
    TOKEN_SYSTEM_OUT_PRINTLN  [reduce usando la regla 23 (instruccion)]
    TOKEN_DVOID               reduce usando la regla 5 (lSentencia)
    TOKEN_DVOID               [reduce usando la regla 23 (instruccion)]
    TOKEN_NULL                reduce usando la regla 5 (lSentencia)
    TOKEN_NULL                [reduce usando la regla 23 (instruccion)]
    TOKEN_INTEGER_CLASS       reduce usando la regla 5 (lSentencia)
    TOKEN_INTEGER_CLASS       [reduce usando la regla 23 (instruccion)]
    TOKEN_DOUBLE_CLASS        reduce usando la regla 5 (lSentencia)
    TOKEN_DOUBLE_CLASS        [reduce usando la regla 23 (instruccion)]
    TOKEN_FLOAT_CLASS         reduce usando la regla 5 (lSentencia)
    TOKEN_FLOAT_CLASS         [reduce usando la regla 23 (instruccion)]
    TOKEN_ARRAYS              reduce usando la regla 5 (lSentencia)
    TOKEN_ARRAYS              [reduce usando la regla 23 (instruccion)]
    TOKEN_IF                  reduce usando la regla 5 (lSentencia)
    TOKEN_IF                  [reduce usando la regla 23 (instruccion)]
    TOKEN_SWITCH              reduce usando la regla 5 (lSentencia)
    TOKEN_SWITCH              [reduce usando la regla 23 (instruccion)]
    TOKEN_BREAK               reduce usando la regla 5 (lSentencia)
    TOKEN_BREAK               [reduce usando la regla 23 (instruccion)]
    TOKEN_WHILE               reduce usando la regla 5 (lSentencia)
    TOKEN_WHILE               [reduce usando la regla 23 (instruccion)]
    TOKEN_FOR                 reduce usando la regla 5 (lSentencia)
    TOKEN_FOR                 [reduce usando la regla 23 (instruccion)]
    TOKEN_CONTINUE            reduce usando la regla 5 (lSentencia)
    TOKEN_CONTINUE            [reduce usando la regla 23 (instruccion)]
    TOKEN_RETURN              reduce usando la regla 5 (lSentencia)
    TOKEN_RETURN              [reduce usando la regla 23 (instruccion)]
    TOKEN_PUBLIC              reduce usando la regla 5 (lSentencia)
    TOKEN_PUBLIC              [reduce usando la regla 23 (instruccion)]
    '}'                       reduce usando la regla 5 (lSentencia)
    '}'                       [reduce usando la regla 23 (instruccion)]
    '('                       reduce usando la regla 5 (lSentencia)
    '('                       [reduce usando la regla 23 (instruccion)]
    '{'                       reduce usando la regla 5 (lSentencia)
    '{'                       [reduce usando la regla 23 (instruccion)]
    $default                  reduce usando la regla 5 (lSentencia)


Estado 66

   22 instruccion: error ';' •

    $default  reduce usando la regla 22 (instruccion)


Estado 67

   75 imprimir: TOKEN_PRINT '(' • lista_Expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    lista_Expr       ir al estado 124
    expr             ir al estado 125
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 68

  162 atom: TOKEN_DSTRING '.' • TOKEN_VALUE_OF '(' expr ')'
  163     | TOKEN_DSTRING '.' • TOKEN_JOIN '(' expr ',' expr ')'
  164     | TOKEN_DSTRING '.' • TOKEN_JOIN '(' expr ',' join_variadic_args ')'

    TOKEN_VALUE_OF  desplazar e ir al estado 126
    TOKEN_JOIN      desplazar e ir al estado 127


Estado 69

  150 postfix: TOKEN_IDENTIFIER TOKEN_PLUS_PLUS •

    $default  reduce usando la regla 150 (postfix)


Estado 70

  151 postfix: TOKEN_IDENTIFIER TOKEN_MINUS_MINUS •

    $default  reduce usando la regla 151 (postfix)


Estado 71

   63 asignacion: TOKEN_IDENTIFIER TOKEN_PLUS_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 128
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 72

   64 asignacion: TOKEN_IDENTIFIER TOKEN_MINUS_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 129
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 73

   65 asignacion: TOKEN_IDENTIFIER TOKEN_MUL_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 130
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 74

   66 asignacion: TOKEN_IDENTIFIER TOKEN_DIV_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 131
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 75

   67 asignacion: TOKEN_IDENTIFIER TOKEN_MOD_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 132
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 76

   68 asignacion: TOKEN_IDENTIFIER TOKEN_AND_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 133
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 77

   69 asignacion: TOKEN_IDENTIFIER TOKEN_OR_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 134
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 78

   70 asignacion: TOKEN_IDENTIFIER TOKEN_XOR_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 135
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 79

   71 asignacion: TOKEN_IDENTIFIER TOKEN_SHL_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 136
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 80

   72 asignacion: TOKEN_IDENTIFIER TOKEN_SHR_ASSIGN • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 137
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 81

  202 llamada_funcion: TOKEN_IDENTIFIER '(' • argumentos_opt ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    $default  reduce usando la regla 200 (argumentos_opt)

    lista_Expr       ir al estado 138
    expr             ir al estado 125
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    argumentos_opt   ir al estado 139
    llamada_funcion  ir al estado 64


Estado 82

   62 asignacion: TOKEN_IDENTIFIER '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 140
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 83

  120 indices_una: '[' • expr ']'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 141
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 84

  118 asignacion_elemento: TOKEN_IDENTIFIER indices_una • '=' expr
  121 indices_multi: indices_una • indices_una

    '='  desplazar e ir al estado 142
    '['  desplazar e ir al estado 83

    indices_una  ir al estado 143


Estado 85

  119 asignacion_elemento: TOKEN_IDENTIFIER indices_multi • '=' expr
  122 indices_multi: indices_multi • indices_una

    '='  desplazar e ir al estado 144
    '['  desplazar e ir al estado 83

    indices_una  ir al estado 145


Estado 86

  177 tipoPrimitivo: TOKEN_DSTRING •

    $default  reduce usando la regla 177 (tipoPrimitivo)


Estado 87

   92 final_prefix_array_decl: TOKEN_FINAL tipoPrimitivo • prefix_dims TOKEN_IDENTIFIER $@3 array_prefix_init_opt
   94 final_postfix_array_decl: TOKEN_FINAL tipoPrimitivo • TOKEN_IDENTIFIER postfix_dims $@4 array_postfix_init_opt
   97 final_var_decl: TOKEN_FINAL tipoPrimitivo • TOKEN_IDENTIFIER '=' expr

    TOKEN_IDENTIFIER  desplazar e ir al estado 146
    '['               desplazar e ir al estado 121

    prefix_dims  ir al estado 147


Estado 88

   76 imprimir: TOKEN_SYSTEM_OUT_PRINTLN '(' • lista_Expr ')'
   77         | TOKEN_SYSTEM_OUT_PRINTLN '(' • ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33
    ')'                     desplazar e ir al estado 148

    lista_Expr       ir al estado 149
    expr             ir al estado 125
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 89

  159 atom: TOKEN_INTEGER_CLASS '.' • TOKEN_PARSE_INT '(' expr ')'

    TOKEN_PARSE_INT  desplazar e ir al estado 150


Estado 90

  160 atom: TOKEN_DOUBLE_CLASS '.' • TOKEN_PARSE_DOUBLE '(' expr ')'

    TOKEN_PARSE_DOUBLE  desplazar e ir al estado 151


Estado 91

  161 atom: TOKEN_FLOAT_CLASS '.' • TOKEN_PARSE_FLOAT '(' expr ')'

    TOKEN_PARSE_FLOAT  desplazar e ir al estado 152


Estado 92

  158 atom: TOKEN_ARRAYS '.' • TOKEN_INDEXOF '(' expr ',' expr ')'

    TOKEN_INDEXOF  desplazar e ir al estado 153


Estado 93

   24 if_statement: TOKEN_IF '(' • expr ')' bloque
   25             | TOKEN_IF '(' • expr ')' bloque TOKEN_ELSE bloque
   26             | TOKEN_IF '(' • expr ')' bloque TOKEN_ELSE if_statement
   27             | TOKEN_IF '(' • expr ')' instruccion_simple ';'
   28             | TOKEN_IF '(' • expr ')' instruccion_simple ';' TOKEN_ELSE bloque
   29             | TOKEN_IF '(' • expr ')' instruccion_simple ';' TOKEN_ELSE if_statement

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 154
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 94

   30 switch_statement: TOKEN_SWITCH '(' • expr ')' '{' case_list '}'
   31                 | TOKEN_SWITCH '(' • expr ')' '{' case_list default_case '}'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 155
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 95

   57 break_statement: TOKEN_BREAK ';' •

    $default  reduce usando la regla 57 (break_statement)


Estado 96

   32 while_statement: TOKEN_WHILE '(' • expr ')' bloque
   33                | TOKEN_WHILE '(' • expr ')' instruccion_simple

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 156
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 97

   34 for_statement: TOKEN_FOR '(' • declaracion_var ';' expr ';' incremento ')' bloque_for
   35              | TOKEN_FOR '(' • declaracion_var ';' expr ';' incremento ')' instruccion_simple
   36              | TOKEN_FOR '(' • declaracion_var ';' expr ';' ')' bloque_for
   37              | TOKEN_FOR '(' • declaracion_var ';' expr ';' ')' instruccion_simple
   38              | TOKEN_FOR '(' • asignacion ';' expr ';' incremento ')' bloque
   39              | TOKEN_FOR '(' • asignacion ';' expr ';' incremento ')' instruccion_simple
  198 for_each_statement: TOKEN_FOR '(' • tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque
  199                   | TOKEN_FOR '(' • tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

    TOKEN_DINT        desplazar e ir al estado 3
    TOKEN_DFLOAT      desplazar e ir al estado 4
    TOKEN_DDOUBLE     desplazar e ir al estado 5
    TOKEN_DSTRING     desplazar e ir al estado 86
    TOKEN_IDENTIFIER  desplazar e ir al estado 157
    TOKEN_DBOOLEAN    desplazar e ir al estado 14
    TOKEN_DCHAR       desplazar e ir al estado 15
    TOKEN_FINAL       desplazar e ir al estado 17
    TOKEN_DVOID       desplazar e ir al estado 19

    asignacion                ir al estado 158
    declaracion_var           ir al estado 159
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    tipoPrimitivo             ir al estado 160


Estado 98

   58 continue_statement: TOKEN_CONTINUE ';' •

    $default  reduce usando la regla 58 (continue_statement)


Estado 99

  162 atom: TOKEN_DSTRING • '.' TOKEN_VALUE_OF '(' expr ')'
  163     | TOKEN_DSTRING • '.' TOKEN_JOIN '(' expr ',' expr ')'
  164     | TOKEN_DSTRING • '.' TOKEN_JOIN '(' expr ',' join_variadic_args ')'

    '.'  desplazar e ir al estado 68


Estado 100

  150 postfix: TOKEN_IDENTIFIER • TOKEN_PLUS_PLUS
  151        | TOKEN_IDENTIFIER • TOKEN_MINUS_MINUS
  156 atom: TOKEN_IDENTIFIER •
  202 llamada_funcion: TOKEN_IDENTIFIER • '(' argumentos_opt ')'

    TOKEN_PLUS_PLUS    desplazar e ir al estado 69
    TOKEN_MINUS_MINUS  desplazar e ir al estado 70
    '('                desplazar e ir al estado 81

    '('       [reduce usando la regla 156 (atom)]
    $default  reduce usando la regla 156 (atom)


Estado 101

  141 expr: TOKEN_NOT • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 161
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 102

  142 expr: '-' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 162
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 103

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  197 return_stmt: TOKEN_RETURN expr •

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 197 (return_stmt)


Estado 104

  143 expr: postfix •
  145 postfix: postfix • '[' expr ']'
  146        | postfix • '.' TOKEN_LENGTH
  147        | postfix • '.' TOKEN_ADD '(' expr ')'
  148        | postfix • '.' TOKEN_IDENTIFIER '(' expr ')'
  149        | postfix • '.' TOKEN_IDENTIFIER '(' ')'

    '.'  desplazar e ir al estado 117
    '['  desplazar e ir al estado 119

    $default  reduce usando la regla 143 (expr)


Estado 105

  182 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC • TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt ')' bloque

    TOKEN_DVOID  desplazar e ir al estado 181


Estado 106

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  155 atom: '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 182


Estado 107

  153 unary: '(' tipoPrimitivo • ')' postfix

    ')'  desplazar e ir al estado 183


Estado 108

    5 lSentencia: error • '}'
   22 instruccion: error • ';'
   23            | error • '}'
   79 bloque: '{' error • '}'

    '}'  desplazar e ir al estado 184
    ';'  desplazar e ir al estado 66


Estado 109

    2 lSentencia: lSentencia • instruccion
    4           | lSentencia • error '}'
   78 bloque: '{' lSentencia • '}'

    error                     desplazar e ir al estado 111
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    TOKEN_NULL                desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 23
    TOKEN_ARRAYS              desplazar e ir al estado 24
    TOKEN_IF                  desplazar e ir al estado 25
    TOKEN_SWITCH              desplazar e ir al estado 26
    TOKEN_BREAK               desplazar e ir al estado 27
    TOKEN_WHILE               desplazar e ir al estado 28
    TOKEN_FOR                 desplazar e ir al estado 29
    TOKEN_CONTINUE            desplazar e ir al estado 30
    TOKEN_RETURN              desplazar e ir al estado 31
    TOKEN_PUBLIC              desplazar e ir al estado 32
    '}'                       desplazar e ir al estado 185
    '('                       desplazar e ir al estado 33
    '{'                       desplazar e ir al estado 34

    instruccion               ir al estado 112
    if_statement              ir al estado 38
    switch_statement          ir al estado 39
    while_statement           ir al estado 40
    for_statement             ir al estado 41
    break_statement           ir al estado 42
    continue_statement        ir al estado 43
    asignacion                ir al estado 44
    imprimir                  ir al estado 45
    bloque                    ir al estado 46
    declaracion_var           ir al estado 47
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    asignacion_elemento       ir al estado 54
    postfix                   ir al estado 55
    unary                     ir al estado 56
    atom                      ir al estado 57
    primitivo                 ir al estado 58
    tipoPrimitivo             ir al estado 59
    funcion_declaracion       ir al estado 60
    main_declaracion          ir al estado 61
    return_stmt               ir al estado 62
    for_each_statement        ir al estado 63
    llamada_funcion           ir al estado 64


Estado 110

    0 $accept: s $end •

    $default  aceptar


Estado 111

    4 lSentencia: lSentencia error • '}'
   22 instruccion: error • ';'
   23            | error • '}'

    '}'  desplazar e ir al estado 186
    ';'  desplazar e ir al estado 66


Estado 112

    2 lSentencia: lSentencia instruccion •

    $default  reduce usando la regla 2 (lSentencia)


Estado 113

   18 instruccion: asignacion ';' •

    $default  reduce usando la regla 18 (instruccion)


Estado 114

   12 instruccion: imprimir ';' •

    $default  reduce usando la regla 12 (instruccion)


Estado 115

   14 instruccion: declaracion_var ';' •

    $default  reduce usando la regla 14 (instruccion)


Estado 116

   19 instruccion: asignacion_elemento ';' •

    $default  reduce usando la regla 19 (instruccion)


Estado 117

  146 postfix: postfix '.' • TOKEN_LENGTH
  147        | postfix '.' • TOKEN_ADD '(' expr ')'
  148        | postfix '.' • TOKEN_IDENTIFIER '(' expr ')'
  149        | postfix '.' • TOKEN_IDENTIFIER '(' ')'

    TOKEN_IDENTIFIER  desplazar e ir al estado 187
    TOKEN_LENGTH      desplazar e ir al estado 188
    TOKEN_ADD         desplazar e ir al estado 189


Estado 118

   20 instruccion: postfix ';' •

    $default  reduce usando la regla 20 (instruccion)


Estado 119

  145 postfix: postfix '[' • expr ']'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 190
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 120

   90 postfix_array_decl: tipoPrimitivo TOKEN_IDENTIFIER • postfix_dims $@2 array_postfix_init_opt
   95 var_decl: tipoPrimitivo TOKEN_IDENTIFIER • '=' expr
   96         | tipoPrimitivo TOKEN_IDENTIFIER •
  181 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER • '(' param_opt ')' bloque

    '('  desplazar e ir al estado 191
    '='  desplazar e ir al estado 192
    '['  desplazar e ir al estado 193

    $default  reduce usando la regla 96 (var_decl)

    postfix_dims  ir al estado 194


Estado 121

  106 prefix_dims: '[' • ']'

    ']'  desplazar e ir al estado 195


Estado 122

   88 prefix_array_decl: tipoPrimitivo prefix_dims • TOKEN_IDENTIFIER $@1 array_prefix_init_opt
  107 prefix_dims: prefix_dims • '[' ']'

    TOKEN_IDENTIFIER  desplazar e ir al estado 196
    '['               desplazar e ir al estado 197


Estado 123

   17 instruccion: return_stmt ';' •

    $default  reduce usando la regla 17 (instruccion)


Estado 124

   73 lista_Expr: lista_Expr • ',' expr
   75 imprimir: TOKEN_PRINT '(' lista_Expr • ')'

    ')'  desplazar e ir al estado 198
    ','  desplazar e ir al estado 199


Estado 125

   74 lista_Expr: expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 74 (lista_Expr)


Estado 126

  162 atom: TOKEN_DSTRING '.' TOKEN_VALUE_OF • '(' expr ')'

    '('  desplazar e ir al estado 200


Estado 127

  163 atom: TOKEN_DSTRING '.' TOKEN_JOIN • '(' expr ',' expr ')'
  164     | TOKEN_DSTRING '.' TOKEN_JOIN • '(' expr ',' join_variadic_args ')'

    '('  desplazar e ir al estado 201


Estado 128

   63 asignacion: TOKEN_IDENTIFIER TOKEN_PLUS_ASSIGN expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 63 (asignacion)


Estado 129

   64 asignacion: TOKEN_IDENTIFIER TOKEN_MINUS_ASSIGN expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 64 (asignacion)


Estado 130

   65 asignacion: TOKEN_IDENTIFIER TOKEN_MUL_ASSIGN expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 65 (asignacion)


Estado 131

   66 asignacion: TOKEN_IDENTIFIER TOKEN_DIV_ASSIGN expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 66 (asignacion)


Estado 132

   67 asignacion: TOKEN_IDENTIFIER TOKEN_MOD_ASSIGN expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 67 (asignacion)


Estado 133

   68 asignacion: TOKEN_IDENTIFIER TOKEN_AND_ASSIGN expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 68 (asignacion)


Estado 134

   69 asignacion: TOKEN_IDENTIFIER TOKEN_OR_ASSIGN expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 69 (asignacion)


Estado 135

   70 asignacion: TOKEN_IDENTIFIER TOKEN_XOR_ASSIGN expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 70 (asignacion)


Estado 136

   71 asignacion: TOKEN_IDENTIFIER TOKEN_SHL_ASSIGN expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 71 (asignacion)


Estado 137

   72 asignacion: TOKEN_IDENTIFIER TOKEN_SHR_ASSIGN expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 72 (asignacion)


Estado 138

   73 lista_Expr: lista_Expr • ',' expr
  201 argumentos_opt: lista_Expr •

    ','  desplazar e ir al estado 199

    $default  reduce usando la regla 201 (argumentos_opt)


Estado 139

  202 llamada_funcion: TOKEN_IDENTIFIER '(' argumentos_opt • ')'

    ')'  desplazar e ir al estado 202


Estado 140

   62 asignacion: TOKEN_IDENTIFIER '=' expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 62 (asignacion)


Estado 141

  120 indices_una: '[' expr • ']'
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ']'                  desplazar e ir al estado 203


Estado 142

  118 asignacion_elemento: TOKEN_IDENTIFIER indices_una '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 204
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 143

  121 indices_multi: indices_una indices_una •

    $default  reduce usando la regla 121 (indices_multi)


Estado 144

  119 asignacion_elemento: TOKEN_IDENTIFIER indices_multi '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 205
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 145

  122 indices_multi: indices_multi indices_una •

    $default  reduce usando la regla 122 (indices_multi)


Estado 146

   94 final_postfix_array_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER • postfix_dims $@4 array_postfix_init_opt
   97 final_var_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER • '=' expr

    '='  desplazar e ir al estado 206
    '['  desplazar e ir al estado 193

    postfix_dims  ir al estado 207


Estado 147

   92 final_prefix_array_decl: TOKEN_FINAL tipoPrimitivo prefix_dims • TOKEN_IDENTIFIER $@3 array_prefix_init_opt
  107 prefix_dims: prefix_dims • '[' ']'

    TOKEN_IDENTIFIER  desplazar e ir al estado 208
    '['               desplazar e ir al estado 197


Estado 148

   77 imprimir: TOKEN_SYSTEM_OUT_PRINTLN '(' ')' •

    $default  reduce usando la regla 77 (imprimir)


Estado 149

   73 lista_Expr: lista_Expr • ',' expr
   76 imprimir: TOKEN_SYSTEM_OUT_PRINTLN '(' lista_Expr • ')'

    ')'  desplazar e ir al estado 209
    ','  desplazar e ir al estado 199


Estado 150

  159 atom: TOKEN_INTEGER_CLASS '.' TOKEN_PARSE_INT • '(' expr ')'

    '('  desplazar e ir al estado 210


Estado 151

  160 atom: TOKEN_DOUBLE_CLASS '.' TOKEN_PARSE_DOUBLE • '(' expr ')'

    '('  desplazar e ir al estado 211


Estado 152

  161 atom: TOKEN_FLOAT_CLASS '.' TOKEN_PARSE_FLOAT • '(' expr ')'

    '('  desplazar e ir al estado 212


Estado 153

  158 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF • '(' expr ',' expr ')'

    '('  desplazar e ir al estado 213


Estado 154

   24 if_statement: TOKEN_IF '(' expr • ')' bloque
   25             | TOKEN_IF '(' expr • ')' bloque TOKEN_ELSE bloque
   26             | TOKEN_IF '(' expr • ')' bloque TOKEN_ELSE if_statement
   27             | TOKEN_IF '(' expr • ')' instruccion_simple ';'
   28             | TOKEN_IF '(' expr • ')' instruccion_simple ';' TOKEN_ELSE bloque
   29             | TOKEN_IF '(' expr • ')' instruccion_simple ';' TOKEN_ELSE if_statement
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 214


Estado 155

   30 switch_statement: TOKEN_SWITCH '(' expr • ')' '{' case_list '}'
   31                 | TOKEN_SWITCH '(' expr • ')' '{' case_list default_case '}'
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 215


Estado 156

   32 while_statement: TOKEN_WHILE '(' expr • ')' bloque
   33                | TOKEN_WHILE '(' expr • ')' instruccion_simple
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 216


Estado 157

   62 asignacion: TOKEN_IDENTIFIER • '=' expr
   63           | TOKEN_IDENTIFIER • TOKEN_PLUS_ASSIGN expr
   64           | TOKEN_IDENTIFIER • TOKEN_MINUS_ASSIGN expr
   65           | TOKEN_IDENTIFIER • TOKEN_MUL_ASSIGN expr
   66           | TOKEN_IDENTIFIER • TOKEN_DIV_ASSIGN expr
   67           | TOKEN_IDENTIFIER • TOKEN_MOD_ASSIGN expr
   68           | TOKEN_IDENTIFIER • TOKEN_AND_ASSIGN expr
   69           | TOKEN_IDENTIFIER • TOKEN_OR_ASSIGN expr
   70           | TOKEN_IDENTIFIER • TOKEN_XOR_ASSIGN expr
   71           | TOKEN_IDENTIFIER • TOKEN_SHL_ASSIGN expr
   72           | TOKEN_IDENTIFIER • TOKEN_SHR_ASSIGN expr

    TOKEN_PLUS_ASSIGN   desplazar e ir al estado 71
    TOKEN_MINUS_ASSIGN  desplazar e ir al estado 72
    TOKEN_MUL_ASSIGN    desplazar e ir al estado 73
    TOKEN_DIV_ASSIGN    desplazar e ir al estado 74
    TOKEN_MOD_ASSIGN    desplazar e ir al estado 75
    TOKEN_AND_ASSIGN    desplazar e ir al estado 76
    TOKEN_OR_ASSIGN     desplazar e ir al estado 77
    TOKEN_XOR_ASSIGN    desplazar e ir al estado 78
    TOKEN_SHL_ASSIGN    desplazar e ir al estado 79
    TOKEN_SHR_ASSIGN    desplazar e ir al estado 80
    '='                 desplazar e ir al estado 82


Estado 158

   38 for_statement: TOKEN_FOR '(' asignacion • ';' expr ';' incremento ')' bloque
   39              | TOKEN_FOR '(' asignacion • ';' expr ';' incremento ')' instruccion_simple

    ';'  desplazar e ir al estado 217


Estado 159

   34 for_statement: TOKEN_FOR '(' declaracion_var • ';' expr ';' incremento ')' bloque_for
   35              | TOKEN_FOR '(' declaracion_var • ';' expr ';' incremento ')' instruccion_simple
   36              | TOKEN_FOR '(' declaracion_var • ';' expr ';' ')' bloque_for
   37              | TOKEN_FOR '(' declaracion_var • ';' expr ';' ')' instruccion_simple

    ';'  desplazar e ir al estado 218


Estado 160

   88 prefix_array_decl: tipoPrimitivo • prefix_dims TOKEN_IDENTIFIER $@1 array_prefix_init_opt
   90 postfix_array_decl: tipoPrimitivo • TOKEN_IDENTIFIER postfix_dims $@2 array_postfix_init_opt
   95 var_decl: tipoPrimitivo • TOKEN_IDENTIFIER '=' expr
   96         | tipoPrimitivo • TOKEN_IDENTIFIER
  198 for_each_statement: TOKEN_FOR '(' tipoPrimitivo • TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque
  199                   | TOKEN_FOR '(' tipoPrimitivo • '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 219
    '['               desplazar e ir al estado 220

    prefix_dims  ir al estado 122


Estado 161

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  141     | TOKEN_NOT expr •

    $default  reduce usando la regla 141 (expr)


Estado 162

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  142     | '-' expr •

    $default  reduce usando la regla 142 (expr)


Estado 163

  131 expr: expr TOKEN_SHIFT_LEFT • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 221
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 164

  132 expr: expr TOKEN_SHIFT_RIGHT • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 222
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 165

  133 expr: expr TOKEN_EQUAL • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 223
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 166

  134 expr: expr TOKEN_NOT_EQUAL • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 224
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 167

  135 expr: expr TOKEN_GREATER • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 225
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 168

  136 expr: expr TOKEN_LESS • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 226
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 169

  137 expr: expr TOKEN_GREATER_EQUAL • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 227
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 170

  138 expr: expr TOKEN_LESS_EQUAL • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 228
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 171

  139 expr: expr TOKEN_AND • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 229
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 172

  140 expr: expr TOKEN_OR • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 230
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 173

  123 expr: expr '+' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 231
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 174

  124 expr: expr '-' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 232
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 175

  128 expr: expr '&' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 233
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 176

  130 expr: expr '^' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 234
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 177

  129 expr: expr '|' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 235
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 178

  125 expr: expr '*' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 236
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 179

  126 expr: expr '/' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 237
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 180

  127 expr: expr '%' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 238
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 181

  182 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID • TOKEN_IDENTIFIER '(' main_params_opt ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 239


Estado 182

  155 atom: '(' expr ')' •

    $default  reduce usando la regla 155 (atom)


Estado 183

  153 unary: '(' tipoPrimitivo ')' • postfix

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    '('                     desplazar e ir al estado 33

    postfix          ir al estado 240
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 184

    5 lSentencia: error '}' •
   23 instruccion: error '}' •
   79 bloque: '{' error '}' •

    $end                      reduce usando la regla 79 (bloque)
    error                     reduce usando la regla 5 (lSentencia)
    error                     [reduce usando la regla 23 (instruccion)]
    error                     [reduce usando la regla 79 (bloque)]
    TOKEN_PRINT               reduce usando la regla 5 (lSentencia)
    TOKEN_PRINT               [reduce usando la regla 23 (instruccion)]
    TOKEN_PRINT               [reduce usando la regla 79 (bloque)]
    TOKEN_DINT                reduce usando la regla 5 (lSentencia)
    TOKEN_DINT                [reduce usando la regla 23 (instruccion)]
    TOKEN_DINT                [reduce usando la regla 79 (bloque)]
    TOKEN_DFLOAT              reduce usando la regla 5 (lSentencia)
    TOKEN_DFLOAT              [reduce usando la regla 23 (instruccion)]
    TOKEN_DFLOAT              [reduce usando la regla 79 (bloque)]
    TOKEN_DDOUBLE             reduce usando la regla 5 (lSentencia)
    TOKEN_DDOUBLE             [reduce usando la regla 23 (instruccion)]
    TOKEN_DDOUBLE             [reduce usando la regla 79 (bloque)]
    TOKEN_DSTRING             reduce usando la regla 5 (lSentencia)
    TOKEN_DSTRING             [reduce usando la regla 23 (instruccion)]
    TOKEN_DSTRING             [reduce usando la regla 79 (bloque)]
    TOKEN_UNSIGNED_INTEGER    reduce usando la regla 5 (lSentencia)
    TOKEN_UNSIGNED_INTEGER    [reduce usando la regla 23 (instruccion)]
    TOKEN_UNSIGNED_INTEGER    [reduce usando la regla 79 (bloque)]
    TOKEN_REAL                reduce usando la regla 5 (lSentencia)
    TOKEN_REAL                [reduce usando la regla 23 (instruccion)]
    TOKEN_REAL                [reduce usando la regla 79 (bloque)]
    TOKEN_REAL_FLOAT          reduce usando la regla 5 (lSentencia)
    TOKEN_REAL_FLOAT          [reduce usando la regla 23 (instruccion)]
    TOKEN_REAL_FLOAT          [reduce usando la regla 79 (bloque)]
    TOKEN_STRING              reduce usando la regla 5 (lSentencia)
    TOKEN_STRING              [reduce usando la regla 23 (instruccion)]
    TOKEN_STRING              [reduce usando la regla 79 (bloque)]
    TOKEN_IDENTIFIER          reduce usando la regla 5 (lSentencia)
    TOKEN_IDENTIFIER          [reduce usando la regla 23 (instruccion)]
    TOKEN_IDENTIFIER          [reduce usando la regla 79 (bloque)]
    TOKEN_TRUE                reduce usando la regla 5 (lSentencia)
    TOKEN_TRUE                [reduce usando la regla 23 (instruccion)]
    TOKEN_TRUE                [reduce usando la regla 79 (bloque)]
    TOKEN_FALSE               reduce usando la regla 5 (lSentencia)
    TOKEN_FALSE               [reduce usando la regla 23 (instruccion)]
    TOKEN_FALSE               [reduce usando la regla 79 (bloque)]
    TOKEN_DBOOLEAN            reduce usando la regla 5 (lSentencia)
    TOKEN_DBOOLEAN            [reduce usando la regla 23 (instruccion)]
    TOKEN_DBOOLEAN            [reduce usando la regla 79 (bloque)]
    TOKEN_DCHAR               reduce usando la regla 5 (lSentencia)
    TOKEN_DCHAR               [reduce usando la regla 23 (instruccion)]
    TOKEN_DCHAR               [reduce usando la regla 79 (bloque)]
    TOKEN_CHAR_LITERAL        reduce usando la regla 5 (lSentencia)
    TOKEN_CHAR_LITERAL        [reduce usando la regla 23 (instruccion)]
    TOKEN_CHAR_LITERAL        [reduce usando la regla 79 (bloque)]
    TOKEN_FINAL               reduce usando la regla 5 (lSentencia)
    TOKEN_FINAL               [reduce usando la regla 23 (instruccion)]
    TOKEN_FINAL               [reduce usando la regla 79 (bloque)]
    TOKEN_SYSTEM_OUT_PRINTLN  reduce usando la regla 5 (lSentencia)
    TOKEN_SYSTEM_OUT_PRINTLN  [reduce usando la regla 23 (instruccion)]
    TOKEN_SYSTEM_OUT_PRINTLN  [reduce usando la regla 79 (bloque)]
    TOKEN_DVOID               reduce usando la regla 5 (lSentencia)
    TOKEN_DVOID               [reduce usando la regla 23 (instruccion)]
    TOKEN_DVOID               [reduce usando la regla 79 (bloque)]
    TOKEN_NULL                reduce usando la regla 5 (lSentencia)
    TOKEN_NULL                [reduce usando la regla 23 (instruccion)]
    TOKEN_NULL                [reduce usando la regla 79 (bloque)]
    TOKEN_INTEGER_CLASS       reduce usando la regla 5 (lSentencia)
    TOKEN_INTEGER_CLASS       [reduce usando la regla 23 (instruccion)]
    TOKEN_INTEGER_CLASS       [reduce usando la regla 79 (bloque)]
    TOKEN_DOUBLE_CLASS        reduce usando la regla 5 (lSentencia)
    TOKEN_DOUBLE_CLASS        [reduce usando la regla 23 (instruccion)]
    TOKEN_DOUBLE_CLASS        [reduce usando la regla 79 (bloque)]
    TOKEN_FLOAT_CLASS         reduce usando la regla 5 (lSentencia)
    TOKEN_FLOAT_CLASS         [reduce usando la regla 23 (instruccion)]
    TOKEN_FLOAT_CLASS         [reduce usando la regla 79 (bloque)]
    TOKEN_ARRAYS              reduce usando la regla 5 (lSentencia)
    TOKEN_ARRAYS              [reduce usando la regla 23 (instruccion)]
    TOKEN_ARRAYS              [reduce usando la regla 79 (bloque)]
    TOKEN_IF                  reduce usando la regla 5 (lSentencia)
    TOKEN_IF                  [reduce usando la regla 23 (instruccion)]
    TOKEN_IF                  [reduce usando la regla 79 (bloque)]
    TOKEN_ELSE                reduce usando la regla 79 (bloque)
    TOKEN_SWITCH              reduce usando la regla 5 (lSentencia)
    TOKEN_SWITCH              [reduce usando la regla 23 (instruccion)]
    TOKEN_SWITCH              [reduce usando la regla 79 (bloque)]
    TOKEN_CASE                reduce usando la regla 79 (bloque)
    TOKEN_DEFAULT             reduce usando la regla 79 (bloque)
    TOKEN_BREAK               reduce usando la regla 5 (lSentencia)
    TOKEN_BREAK               [reduce usando la regla 23 (instruccion)]
    TOKEN_BREAK               [reduce usando la regla 79 (bloque)]
    TOKEN_WHILE               reduce usando la regla 5 (lSentencia)
    TOKEN_WHILE               [reduce usando la regla 23 (instruccion)]
    TOKEN_WHILE               [reduce usando la regla 79 (bloque)]
    TOKEN_FOR                 reduce usando la regla 5 (lSentencia)
    TOKEN_FOR                 [reduce usando la regla 23 (instruccion)]
    TOKEN_FOR                 [reduce usando la regla 79 (bloque)]
    TOKEN_CONTINUE            reduce usando la regla 5 (lSentencia)
    TOKEN_CONTINUE            [reduce usando la regla 23 (instruccion)]
    TOKEN_CONTINUE            [reduce usando la regla 79 (bloque)]
    TOKEN_RETURN              reduce usando la regla 5 (lSentencia)
    TOKEN_RETURN              [reduce usando la regla 23 (instruccion)]
    TOKEN_RETURN              [reduce usando la regla 79 (bloque)]
    TOKEN_PUBLIC              reduce usando la regla 5 (lSentencia)
    TOKEN_PUBLIC              [reduce usando la regla 23 (instruccion)]
    TOKEN_PUBLIC              [reduce usando la regla 79 (bloque)]
    '}'                       reduce usando la regla 5 (lSentencia)
    '}'                       [reduce usando la regla 23 (instruccion)]
    '}'                       [reduce usando la regla 79 (bloque)]
    '('                       reduce usando la regla 5 (lSentencia)
    '('                       [reduce usando la regla 23 (instruccion)]
    '('                       [reduce usando la regla 79 (bloque)]
    '{'                       reduce usando la regla 5 (lSentencia)
    '{'                       [reduce usando la regla 23 (instruccion)]
    '{'                       [reduce usando la regla 79 (bloque)]
    $default                  reduce usando la regla 5 (lSentencia)


Estado 185

   78 bloque: '{' lSentencia '}' •

    $default  reduce usando la regla 78 (bloque)


Estado 186

    4 lSentencia: lSentencia error '}' •
   23 instruccion: error '}' •

    $end                      reduce usando la regla 4 (lSentencia)
    $end                      [reduce usando la regla 23 (instruccion)]
    error                     reduce usando la regla 4 (lSentencia)
    error                     [reduce usando la regla 23 (instruccion)]
    TOKEN_PRINT               reduce usando la regla 4 (lSentencia)
    TOKEN_PRINT               [reduce usando la regla 23 (instruccion)]
    TOKEN_DINT                reduce usando la regla 4 (lSentencia)
    TOKEN_DINT                [reduce usando la regla 23 (instruccion)]
    TOKEN_DFLOAT              reduce usando la regla 4 (lSentencia)
    TOKEN_DFLOAT              [reduce usando la regla 23 (instruccion)]
    TOKEN_DDOUBLE             reduce usando la regla 4 (lSentencia)
    TOKEN_DDOUBLE             [reduce usando la regla 23 (instruccion)]
    TOKEN_DSTRING             reduce usando la regla 4 (lSentencia)
    TOKEN_DSTRING             [reduce usando la regla 23 (instruccion)]
    TOKEN_UNSIGNED_INTEGER    reduce usando la regla 4 (lSentencia)
    TOKEN_UNSIGNED_INTEGER    [reduce usando la regla 23 (instruccion)]
    TOKEN_REAL                reduce usando la regla 4 (lSentencia)
    TOKEN_REAL                [reduce usando la regla 23 (instruccion)]
    TOKEN_REAL_FLOAT          reduce usando la regla 4 (lSentencia)
    TOKEN_REAL_FLOAT          [reduce usando la regla 23 (instruccion)]
    TOKEN_STRING              reduce usando la regla 4 (lSentencia)
    TOKEN_STRING              [reduce usando la regla 23 (instruccion)]
    TOKEN_IDENTIFIER          reduce usando la regla 4 (lSentencia)
    TOKEN_IDENTIFIER          [reduce usando la regla 23 (instruccion)]
    TOKEN_TRUE                reduce usando la regla 4 (lSentencia)
    TOKEN_TRUE                [reduce usando la regla 23 (instruccion)]
    TOKEN_FALSE               reduce usando la regla 4 (lSentencia)
    TOKEN_FALSE               [reduce usando la regla 23 (instruccion)]
    TOKEN_DBOOLEAN            reduce usando la regla 4 (lSentencia)
    TOKEN_DBOOLEAN            [reduce usando la regla 23 (instruccion)]
    TOKEN_DCHAR               reduce usando la regla 4 (lSentencia)
    TOKEN_DCHAR               [reduce usando la regla 23 (instruccion)]
    TOKEN_CHAR_LITERAL        reduce usando la regla 4 (lSentencia)
    TOKEN_CHAR_LITERAL        [reduce usando la regla 23 (instruccion)]
    TOKEN_FINAL               reduce usando la regla 4 (lSentencia)
    TOKEN_FINAL               [reduce usando la regla 23 (instruccion)]
    TOKEN_SYSTEM_OUT_PRINTLN  reduce usando la regla 4 (lSentencia)
    TOKEN_SYSTEM_OUT_PRINTLN  [reduce usando la regla 23 (instruccion)]
    TOKEN_DVOID               reduce usando la regla 4 (lSentencia)
    TOKEN_DVOID               [reduce usando la regla 23 (instruccion)]
    TOKEN_NULL                reduce usando la regla 4 (lSentencia)
    TOKEN_NULL                [reduce usando la regla 23 (instruccion)]
    TOKEN_INTEGER_CLASS       reduce usando la regla 4 (lSentencia)
    TOKEN_INTEGER_CLASS       [reduce usando la regla 23 (instruccion)]
    TOKEN_DOUBLE_CLASS        reduce usando la regla 4 (lSentencia)
    TOKEN_DOUBLE_CLASS        [reduce usando la regla 23 (instruccion)]
    TOKEN_FLOAT_CLASS         reduce usando la regla 4 (lSentencia)
    TOKEN_FLOAT_CLASS         [reduce usando la regla 23 (instruccion)]
    TOKEN_ARRAYS              reduce usando la regla 4 (lSentencia)
    TOKEN_ARRAYS              [reduce usando la regla 23 (instruccion)]
    TOKEN_IF                  reduce usando la regla 4 (lSentencia)
    TOKEN_IF                  [reduce usando la regla 23 (instruccion)]
    TOKEN_SWITCH              reduce usando la regla 4 (lSentencia)
    TOKEN_SWITCH              [reduce usando la regla 23 (instruccion)]
    TOKEN_BREAK               reduce usando la regla 4 (lSentencia)
    TOKEN_BREAK               [reduce usando la regla 23 (instruccion)]
    TOKEN_WHILE               reduce usando la regla 4 (lSentencia)
    TOKEN_WHILE               [reduce usando la regla 23 (instruccion)]
    TOKEN_FOR                 reduce usando la regla 4 (lSentencia)
    TOKEN_FOR                 [reduce usando la regla 23 (instruccion)]
    TOKEN_CONTINUE            reduce usando la regla 4 (lSentencia)
    TOKEN_CONTINUE            [reduce usando la regla 23 (instruccion)]
    TOKEN_RETURN              reduce usando la regla 4 (lSentencia)
    TOKEN_RETURN              [reduce usando la regla 23 (instruccion)]
    TOKEN_PUBLIC              reduce usando la regla 4 (lSentencia)
    TOKEN_PUBLIC              [reduce usando la regla 23 (instruccion)]
    '}'                       reduce usando la regla 4 (lSentencia)
    '}'                       [reduce usando la regla 23 (instruccion)]
    '('                       reduce usando la regla 4 (lSentencia)
    '('                       [reduce usando la regla 23 (instruccion)]
    '{'                       reduce usando la regla 4 (lSentencia)
    '{'                       [reduce usando la regla 23 (instruccion)]
    $default                  reduce usando la regla 4 (lSentencia)


Estado 187

  148 postfix: postfix '.' TOKEN_IDENTIFIER • '(' expr ')'
  149        | postfix '.' TOKEN_IDENTIFIER • '(' ')'

    '('  desplazar e ir al estado 241


Estado 188

  146 postfix: postfix '.' TOKEN_LENGTH •

    $default  reduce usando la regla 146 (postfix)


Estado 189

  147 postfix: postfix '.' TOKEN_ADD • '(' expr ')'

    '('  desplazar e ir al estado 242


Estado 190

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  145 postfix: postfix '[' expr • ']'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ']'                  desplazar e ir al estado 243


Estado 191

  181 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER '(' • param_opt ')' bloque

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 19

    $default  reduce usando la regla 190 (param_opt)

    tipoPrimitivo     ir al estado 244
    param_opt         ir al estado 245
    lista_parametros  ir al estado 246


Estado 192

   95 var_decl: tipoPrimitivo TOKEN_IDENTIFIER '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 247
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 193

  108 postfix_dims: '[' • ']'

    ']'  desplazar e ir al estado 248


Estado 194

   90 postfix_array_decl: tipoPrimitivo TOKEN_IDENTIFIER postfix_dims • $@2 array_postfix_init_opt
  109 postfix_dims: postfix_dims • '[' ']'

    '['  desplazar e ir al estado 249

    $default  reduce usando la regla 89 ($@2)

    $@2  ir al estado 250


Estado 195

  106 prefix_dims: '[' ']' •

    $default  reduce usando la regla 106 (prefix_dims)


Estado 196

   88 prefix_array_decl: tipoPrimitivo prefix_dims TOKEN_IDENTIFIER • $@1 array_prefix_init_opt

    $default  reduce usando la regla 87 ($@1)

    $@1  ir al estado 251


Estado 197

  107 prefix_dims: prefix_dims '[' • ']'

    ']'  desplazar e ir al estado 252


Estado 198

   75 imprimir: TOKEN_PRINT '(' lista_Expr ')' •

    $default  reduce usando la regla 75 (imprimir)


Estado 199

   73 lista_Expr: lista_Expr ',' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 253
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 200

  162 atom: TOKEN_DSTRING '.' TOKEN_VALUE_OF '(' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 254
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 201

  163 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' • expr ',' expr ')'
  164     | TOKEN_DSTRING '.' TOKEN_JOIN '(' • expr ',' join_variadic_args ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 255
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 202

  202 llamada_funcion: TOKEN_IDENTIFIER '(' argumentos_opt ')' •

    $default  reduce usando la regla 202 (llamada_funcion)


Estado 203

  120 indices_una: '[' expr ']' •

    $default  reduce usando la regla 120 (indices_una)


Estado 204

  118 asignacion_elemento: TOKEN_IDENTIFIER indices_una '=' expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 118 (asignacion_elemento)


Estado 205

  119 asignacion_elemento: TOKEN_IDENTIFIER indices_multi '=' expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 119 (asignacion_elemento)


Estado 206

   97 final_var_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 256
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 207

   94 final_postfix_array_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER postfix_dims • $@4 array_postfix_init_opt
  109 postfix_dims: postfix_dims • '[' ']'

    '['  desplazar e ir al estado 249

    $default  reduce usando la regla 93 ($@4)

    $@4  ir al estado 257


Estado 208

   92 final_prefix_array_decl: TOKEN_FINAL tipoPrimitivo prefix_dims TOKEN_IDENTIFIER • $@3 array_prefix_init_opt

    $default  reduce usando la regla 91 ($@3)

    $@3  ir al estado 258


Estado 209

   76 imprimir: TOKEN_SYSTEM_OUT_PRINTLN '(' lista_Expr ')' •

    $default  reduce usando la regla 76 (imprimir)


Estado 210

  159 atom: TOKEN_INTEGER_CLASS '.' TOKEN_PARSE_INT '(' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 259
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 211

  160 atom: TOKEN_DOUBLE_CLASS '.' TOKEN_PARSE_DOUBLE '(' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 260
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 212

  161 atom: TOKEN_FLOAT_CLASS '.' TOKEN_PARSE_FLOAT '(' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 261
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 213

  158 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' • expr ',' expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 262
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 214

   24 if_statement: TOKEN_IF '(' expr ')' • bloque
   25             | TOKEN_IF '(' expr ')' • bloque TOKEN_ELSE bloque
   26             | TOKEN_IF '(' expr ')' • bloque TOKEN_ELSE if_statement
   27             | TOKEN_IF '(' expr ')' • instruccion_simple ';'
   28             | TOKEN_IF '(' expr ')' • instruccion_simple ';' TOKEN_ELSE bloque
   29             | TOKEN_IF '(' expr ')' • instruccion_simple ';' TOKEN_ELSE if_statement

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 157
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    '{'                       desplazar e ir al estado 34

    instruccion_simple        ir al estado 263
    asignacion                ir al estado 264
    imprimir                  ir al estado 265
    bloque                    ir al estado 266
    declaracion_var           ir al estado 267
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    tipoPrimitivo             ir al estado 268


Estado 215

   30 switch_statement: TOKEN_SWITCH '(' expr ')' • '{' case_list '}'
   31                 | TOKEN_SWITCH '(' expr ')' • '{' case_list default_case '}'

    '{'  desplazar e ir al estado 269


Estado 216

   32 while_statement: TOKEN_WHILE '(' expr ')' • bloque
   33                | TOKEN_WHILE '(' expr ')' • instruccion_simple

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 157
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    '{'                       desplazar e ir al estado 34

    instruccion_simple        ir al estado 270
    asignacion                ir al estado 264
    imprimir                  ir al estado 265
    bloque                    ir al estado 271
    declaracion_var           ir al estado 267
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    tipoPrimitivo             ir al estado 268


Estado 217

   38 for_statement: TOKEN_FOR '(' asignacion ';' • expr ';' incremento ')' bloque
   39              | TOKEN_FOR '(' asignacion ';' • expr ';' incremento ')' instruccion_simple

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 272
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 218

   34 for_statement: TOKEN_FOR '(' declaracion_var ';' • expr ';' incremento ')' bloque_for
   35              | TOKEN_FOR '(' declaracion_var ';' • expr ';' incremento ')' instruccion_simple
   36              | TOKEN_FOR '(' declaracion_var ';' • expr ';' ')' bloque_for
   37              | TOKEN_FOR '(' declaracion_var ';' • expr ';' ')' instruccion_simple

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 273
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 219

   90 postfix_array_decl: tipoPrimitivo TOKEN_IDENTIFIER • postfix_dims $@2 array_postfix_init_opt
   95 var_decl: tipoPrimitivo TOKEN_IDENTIFIER • '=' expr
   96         | tipoPrimitivo TOKEN_IDENTIFIER •
  198 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER • ':' TOKEN_IDENTIFIER ')' bloque

    ':'  desplazar e ir al estado 274
    '='  desplazar e ir al estado 192
    '['  desplazar e ir al estado 193

    $default  reduce usando la regla 96 (var_decl)

    postfix_dims  ir al estado 194


Estado 220

  106 prefix_dims: '[' • ']'
  199 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' • ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

    ']'  desplazar e ir al estado 275


Estado 221

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  131     | expr TOKEN_SHIFT_LEFT expr •
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    '*'  desplazar e ir al estado 178
    '/'  desplazar e ir al estado 179
    '%'  desplazar e ir al estado 180

    $default  reduce usando la regla 131 (expr)


Estado 222

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  132     | expr TOKEN_SHIFT_RIGHT expr •
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    '*'  desplazar e ir al estado 178
    '/'  desplazar e ir al estado 179
    '%'  desplazar e ir al estado 180

    $default  reduce usando la regla 132 (expr)


Estado 223

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  133     | expr TOKEN_EQUAL expr •
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 133 (expr)


Estado 224

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  134     | expr TOKEN_NOT_EQUAL expr •
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 134 (expr)


Estado 225

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  135     | expr TOKEN_GREATER expr •
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 164
    '+'                desplazar e ir al estado 173
    '-'                desplazar e ir al estado 174
    '&'                desplazar e ir al estado 175
    '^'                desplazar e ir al estado 176
    '|'                desplazar e ir al estado 177
    '*'                desplazar e ir al estado 178
    '/'                desplazar e ir al estado 179
    '%'                desplazar e ir al estado 180

    $default  reduce usando la regla 135 (expr)


Estado 226

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  136     | expr TOKEN_LESS expr •
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 164
    '+'                desplazar e ir al estado 173
    '-'                desplazar e ir al estado 174
    '&'                desplazar e ir al estado 175
    '^'                desplazar e ir al estado 176
    '|'                desplazar e ir al estado 177
    '*'                desplazar e ir al estado 178
    '/'                desplazar e ir al estado 179
    '%'                desplazar e ir al estado 180

    $default  reduce usando la regla 136 (expr)


Estado 227

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  137     | expr TOKEN_GREATER_EQUAL expr •
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 164
    '+'                desplazar e ir al estado 173
    '-'                desplazar e ir al estado 174
    '&'                desplazar e ir al estado 175
    '^'                desplazar e ir al estado 176
    '|'                desplazar e ir al estado 177
    '*'                desplazar e ir al estado 178
    '/'                desplazar e ir al estado 179
    '%'                desplazar e ir al estado 180

    $default  reduce usando la regla 137 (expr)


Estado 228

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  138     | expr TOKEN_LESS_EQUAL expr •
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 164
    '+'                desplazar e ir al estado 173
    '-'                desplazar e ir al estado 174
    '&'                desplazar e ir al estado 175
    '^'                desplazar e ir al estado 176
    '|'                desplazar e ir al estado 177
    '*'                desplazar e ir al estado 178
    '/'                desplazar e ir al estado 179
    '%'                desplazar e ir al estado 180

    $default  reduce usando la regla 138 (expr)


Estado 229

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  139     | expr TOKEN_AND expr •
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 139 (expr)


Estado 230

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  140     | expr TOKEN_OR expr •

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 140 (expr)


Estado 231

  123 expr: expr • '+' expr
  123     | expr '+' expr •
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 164
    '&'                desplazar e ir al estado 175
    '^'                desplazar e ir al estado 176
    '|'                desplazar e ir al estado 177
    '*'                desplazar e ir al estado 178
    '/'                desplazar e ir al estado 179
    '%'                desplazar e ir al estado 180

    $default  reduce usando la regla 123 (expr)


Estado 232

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  124     | expr '-' expr •
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 164
    '&'                desplazar e ir al estado 175
    '^'                desplazar e ir al estado 176
    '|'                desplazar e ir al estado 177
    '*'                desplazar e ir al estado 178
    '/'                desplazar e ir al estado 179
    '%'                desplazar e ir al estado 180

    $default  reduce usando la regla 124 (expr)


Estado 233

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  128     | expr '&' expr •
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 164
    '*'                desplazar e ir al estado 178
    '/'                desplazar e ir al estado 179
    '%'                desplazar e ir al estado 180

    $default  reduce usando la regla 128 (expr)


Estado 234

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  130     | expr '^' expr •
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 164
    '*'                desplazar e ir al estado 178
    '/'                desplazar e ir al estado 179
    '%'                desplazar e ir al estado 180

    $default  reduce usando la regla 130 (expr)


Estado 235

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  129     | expr '|' expr •
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT   desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT  desplazar e ir al estado 164
    '*'                desplazar e ir al estado 178
    '/'                desplazar e ir al estado 179
    '%'                desplazar e ir al estado 180

    $default  reduce usando la regla 129 (expr)


Estado 236

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  125     | expr '*' expr •
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    $default  reduce usando la regla 125 (expr)


Estado 237

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  126     | expr '/' expr •
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    $default  reduce usando la regla 126 (expr)


Estado 238

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  127     | expr '%' expr •
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    $default  reduce usando la regla 127 (expr)


Estado 239

  182 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER • '(' main_params_opt ')' bloque

    '('  desplazar e ir al estado 276


Estado 240

  145 postfix: postfix • '[' expr ']'
  146        | postfix • '.' TOKEN_LENGTH
  147        | postfix • '.' TOKEN_ADD '(' expr ')'
  148        | postfix • '.' TOKEN_IDENTIFIER '(' expr ')'
  149        | postfix • '.' TOKEN_IDENTIFIER '(' ')'
  153 unary: '(' tipoPrimitivo ')' postfix •

    '.'  desplazar e ir al estado 117
    '['  desplazar e ir al estado 119

    '['       [reduce usando la regla 153 (unary)]
    $default  reduce usando la regla 153 (unary)


Estado 241

  148 postfix: postfix '.' TOKEN_IDENTIFIER '(' • expr ')'
  149        | postfix '.' TOKEN_IDENTIFIER '(' • ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33
    ')'                     desplazar e ir al estado 277

    expr             ir al estado 278
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 242

  147 postfix: postfix '.' TOKEN_ADD '(' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 279
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 243

  145 postfix: postfix '[' expr ']' •

    $default  reduce usando la regla 145 (postfix)


Estado 244

  194 lista_parametros: tipoPrimitivo • param_array_brackets TOKEN_IDENTIFIER

    $default  reduce usando la regla 192 (param_array_brackets)

    param_array_brackets  ir al estado 280


Estado 245

  181 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER '(' param_opt • ')' bloque

    ')'  desplazar e ir al estado 281


Estado 246

  191 param_opt: lista_parametros •
  195 lista_parametros: lista_parametros • ',' tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER

    ','  desplazar e ir al estado 282

    $default  reduce usando la regla 191 (param_opt)


Estado 247

   95 var_decl: tipoPrimitivo TOKEN_IDENTIFIER '=' expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 95 (var_decl)


Estado 248

  108 postfix_dims: '[' ']' •

    $default  reduce usando la regla 108 (postfix_dims)


Estado 249

  109 postfix_dims: postfix_dims '[' • ']'

    ']'  desplazar e ir al estado 283


Estado 250

   90 postfix_array_decl: tipoPrimitivo TOKEN_IDENTIFIER postfix_dims $@2 • array_postfix_init_opt

    '='  desplazar e ir al estado 284

    $default  reduce usando la regla 98 (array_prefix_init_opt)

    array_prefix_init_opt   ir al estado 285
    array_postfix_init_opt  ir al estado 286


Estado 251

   88 prefix_array_decl: tipoPrimitivo prefix_dims TOKEN_IDENTIFIER $@1 • array_prefix_init_opt

    '='  desplazar e ir al estado 284

    $default  reduce usando la regla 98 (array_prefix_init_opt)

    array_prefix_init_opt  ir al estado 287


Estado 252

  107 prefix_dims: prefix_dims '[' ']' •

    $default  reduce usando la regla 107 (prefix_dims)


Estado 253

   73 lista_Expr: lista_Expr ',' expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 73 (lista_Expr)


Estado 254

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  162 atom: TOKEN_DSTRING '.' TOKEN_VALUE_OF '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 288


Estado 255

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  163 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr • ',' expr ')'
  164     | TOKEN_DSTRING '.' TOKEN_JOIN '(' expr • ',' join_variadic_args ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ','                  desplazar e ir al estado 289


Estado 256

   97 final_var_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER '=' expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 97 (final_var_decl)


Estado 257

   94 final_postfix_array_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER postfix_dims $@4 • array_postfix_init_opt

    '='  desplazar e ir al estado 284

    $default  reduce usando la regla 98 (array_prefix_init_opt)

    array_prefix_init_opt   ir al estado 285
    array_postfix_init_opt  ir al estado 290


Estado 258

   92 final_prefix_array_decl: TOKEN_FINAL tipoPrimitivo prefix_dims TOKEN_IDENTIFIER $@3 • array_prefix_init_opt

    '='  desplazar e ir al estado 284

    $default  reduce usando la regla 98 (array_prefix_init_opt)

    array_prefix_init_opt  ir al estado 291


Estado 259

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  159 atom: TOKEN_INTEGER_CLASS '.' TOKEN_PARSE_INT '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 292


Estado 260

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  160 atom: TOKEN_DOUBLE_CLASS '.' TOKEN_PARSE_DOUBLE '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 293


Estado 261

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  161 atom: TOKEN_FLOAT_CLASS '.' TOKEN_PARSE_FLOAT '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 294


Estado 262

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  158 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' expr • ',' expr ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ','                  desplazar e ir al estado 295


Estado 263

   27 if_statement: TOKEN_IF '(' expr ')' instruccion_simple • ';'
   28             | TOKEN_IF '(' expr ')' instruccion_simple • ';' TOKEN_ELSE bloque
   29             | TOKEN_IF '(' expr ')' instruccion_simple • ';' TOKEN_ELSE if_statement

    ';'  desplazar e ir al estado 296


Estado 264

   61 instruccion_simple: asignacion •

    $default  reduce usando la regla 61 (instruccion_simple)


Estado 265

   59 instruccion_simple: imprimir •

    $default  reduce usando la regla 59 (instruccion_simple)


Estado 266

   24 if_statement: TOKEN_IF '(' expr ')' bloque •
   25             | TOKEN_IF '(' expr ')' bloque • TOKEN_ELSE bloque
   26             | TOKEN_IF '(' expr ')' bloque • TOKEN_ELSE if_statement

    TOKEN_ELSE  desplazar e ir al estado 297

    $default  reduce usando la regla 24 (if_statement)


Estado 267

   60 instruccion_simple: declaracion_var •

    $default  reduce usando la regla 60 (instruccion_simple)


Estado 268

   88 prefix_array_decl: tipoPrimitivo • prefix_dims TOKEN_IDENTIFIER $@1 array_prefix_init_opt
   90 postfix_array_decl: tipoPrimitivo • TOKEN_IDENTIFIER postfix_dims $@2 array_postfix_init_opt
   95 var_decl: tipoPrimitivo • TOKEN_IDENTIFIER '=' expr
   96         | tipoPrimitivo • TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  desplazar e ir al estado 298
    '['               desplazar e ir al estado 121

    prefix_dims  ir al estado 122


Estado 269

   30 switch_statement: TOKEN_SWITCH '(' expr ')' '{' • case_list '}'
   31                 | TOKEN_SWITCH '(' expr ')' '{' • case_list default_case '}'

    TOKEN_CASE  desplazar e ir al estado 299

    case_list    ir al estado 300
    case_labels  ir al estado 301
    case_item    ir al estado 302


Estado 270

   33 while_statement: TOKEN_WHILE '(' expr ')' instruccion_simple •

    $default  reduce usando la regla 33 (while_statement)


Estado 271

   32 while_statement: TOKEN_WHILE '(' expr ')' bloque •

    $default  reduce usando la regla 32 (while_statement)


Estado 272

   38 for_statement: TOKEN_FOR '(' asignacion ';' expr • ';' incremento ')' bloque
   39              | TOKEN_FOR '(' asignacion ';' expr • ';' incremento ')' instruccion_simple
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ';'                  desplazar e ir al estado 303


Estado 273

   34 for_statement: TOKEN_FOR '(' declaracion_var ';' expr • ';' incremento ')' bloque_for
   35              | TOKEN_FOR '(' declaracion_var ';' expr • ';' incremento ')' instruccion_simple
   36              | TOKEN_FOR '(' declaracion_var ';' expr • ';' ')' bloque_for
   37              | TOKEN_FOR '(' declaracion_var ';' expr • ';' ')' instruccion_simple
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ';'                  desplazar e ir al estado 304


Estado 274

  198 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER ':' • TOKEN_IDENTIFIER ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 305


Estado 275

  106 prefix_dims: '[' ']' •
  199 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' • TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 306

    TOKEN_IDENTIFIER  [reduce usando la regla 106 (prefix_dims)]
    $default          reduce usando la regla 106 (prefix_dims)


Estado 276

  182 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' • main_params_opt ')' bloque

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 19

    $default  reduce usando la regla 183 (main_params_opt)

    tipoPrimitivo    ir al estado 307
    main_params_opt  ir al estado 308
    main_params      ir al estado 309
    main_param       ir al estado 310


Estado 277

  149 postfix: postfix '.' TOKEN_IDENTIFIER '(' ')' •

    $default  reduce usando la regla 149 (postfix)


Estado 278

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  148 postfix: postfix '.' TOKEN_IDENTIFIER '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 311


Estado 279

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  147 postfix: postfix '.' TOKEN_ADD '(' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 312


Estado 280

  193 param_array_brackets: param_array_brackets • '[' ']'
  194 lista_parametros: tipoPrimitivo param_array_brackets • TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  desplazar e ir al estado 313
    '['               desplazar e ir al estado 314


Estado 281

  181 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER '(' param_opt ')' • bloque

    '{'  desplazar e ir al estado 34

    bloque  ir al estado 315


Estado 282

  195 lista_parametros: lista_parametros ',' • tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 19

    tipoPrimitivo  ir al estado 316


Estado 283

  109 postfix_dims: postfix_dims '[' ']' •

    $default  reduce usando la regla 109 (postfix_dims)


Estado 284

   99 array_prefix_init_opt: '=' • TOKEN_NEW tipoPrimitivo dims_expr_list
  100                      | '=' • '{' lista_Expr '}'
  101                      | '=' • '{' filas_lista '}'
  102                      | '=' • '{' lista_bloques2D '}'
  103                      | '=' • '{' '}'
  104                      | '=' • expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    TOKEN_NEW               desplazar e ir al estado 317
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33
    '{'                     desplazar e ir al estado 318

    expr             ir al estado 319
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 285

  105 array_postfix_init_opt: array_prefix_init_opt •

    $default  reduce usando la regla 105 (array_postfix_init_opt)


Estado 286

   90 postfix_array_decl: tipoPrimitivo TOKEN_IDENTIFIER postfix_dims $@2 array_postfix_init_opt •

    $default  reduce usando la regla 90 (postfix_array_decl)


Estado 287

   88 prefix_array_decl: tipoPrimitivo prefix_dims TOKEN_IDENTIFIER $@1 array_prefix_init_opt •

    $default  reduce usando la regla 88 (prefix_array_decl)


Estado 288

  162 atom: TOKEN_DSTRING '.' TOKEN_VALUE_OF '(' expr ')' •

    $default  reduce usando la regla 162 (atom)


Estado 289

  163 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' • expr ')'
  164     | TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' • join_variadic_args ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr                ir al estado 320
    postfix             ir al estado 104
    unary               ir al estado 56
    atom                ir al estado 57
    join_variadic_args  ir al estado 321
    primitivo           ir al estado 58
    llamada_funcion     ir al estado 64


Estado 290

   94 final_postfix_array_decl: TOKEN_FINAL tipoPrimitivo TOKEN_IDENTIFIER postfix_dims $@4 array_postfix_init_opt •

    $default  reduce usando la regla 94 (final_postfix_array_decl)


Estado 291

   92 final_prefix_array_decl: TOKEN_FINAL tipoPrimitivo prefix_dims TOKEN_IDENTIFIER $@3 array_prefix_init_opt •

    $default  reduce usando la regla 92 (final_prefix_array_decl)


Estado 292

  159 atom: TOKEN_INTEGER_CLASS '.' TOKEN_PARSE_INT '(' expr ')' •

    $default  reduce usando la regla 159 (atom)


Estado 293

  160 atom: TOKEN_DOUBLE_CLASS '.' TOKEN_PARSE_DOUBLE '(' expr ')' •

    $default  reduce usando la regla 160 (atom)


Estado 294

  161 atom: TOKEN_FLOAT_CLASS '.' TOKEN_PARSE_FLOAT '(' expr ')' •

    $default  reduce usando la regla 161 (atom)


Estado 295

  158 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' expr ',' • expr ')'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 322
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 296

   27 if_statement: TOKEN_IF '(' expr ')' instruccion_simple ';' •
   28             | TOKEN_IF '(' expr ')' instruccion_simple ';' • TOKEN_ELSE bloque
   29             | TOKEN_IF '(' expr ')' instruccion_simple ';' • TOKEN_ELSE if_statement

    TOKEN_ELSE  desplazar e ir al estado 323

    $default  reduce usando la regla 27 (if_statement)


Estado 297

   25 if_statement: TOKEN_IF '(' expr ')' bloque TOKEN_ELSE • bloque
   26             | TOKEN_IF '(' expr ')' bloque TOKEN_ELSE • if_statement

    TOKEN_IF  desplazar e ir al estado 25
    '{'       desplazar e ir al estado 34

    if_statement  ir al estado 324
    bloque        ir al estado 325


Estado 298

   90 postfix_array_decl: tipoPrimitivo TOKEN_IDENTIFIER • postfix_dims $@2 array_postfix_init_opt
   95 var_decl: tipoPrimitivo TOKEN_IDENTIFIER • '=' expr
   96         | tipoPrimitivo TOKEN_IDENTIFIER •

    '='  desplazar e ir al estado 192
    '['  desplazar e ir al estado 193

    $default  reduce usando la regla 96 (var_decl)

    postfix_dims  ir al estado 194


Estado 299

   45 case_labels: TOKEN_CASE • expr ':'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 326
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 300

   30 switch_statement: TOKEN_SWITCH '(' expr ')' '{' case_list • '}'
   31                 | TOKEN_SWITCH '(' expr ')' '{' case_list • default_case '}'
   44 case_list: case_list • case_item

    TOKEN_CASE     desplazar e ir al estado 299
    TOKEN_DEFAULT  desplazar e ir al estado 327
    '}'            desplazar e ir al estado 328

    case_labels   ir al estado 301
    case_item     ir al estado 329
    default_case  ir al estado 330


Estado 301

   46 case_labels: case_labels • TOKEN_CASE expr ':'
   47 case_item: case_labels • instrucciones_case
   48          | case_labels • instrucciones_case TOKEN_BREAK ';'

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 157
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    TOKEN_CASE                desplazar e ir al estado 331
    '{'                       desplazar e ir al estado 34

    instrucciones_case        ir al estado 332
    instruccion_case          ir al estado 333
    asignacion                ir al estado 334
    imprimir                  ir al estado 335
    bloque                    ir al estado 336
    declaracion_var           ir al estado 337
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    tipoPrimitivo             ir al estado 268


Estado 302

   43 case_list: case_item •

    $default  reduce usando la regla 43 (case_list)


Estado 303

   38 for_statement: TOKEN_FOR '(' asignacion ';' expr ';' • incremento ')' bloque
   39              | TOKEN_FOR '(' asignacion ';' expr ';' • incremento ')' instruccion_simple

    TOKEN_IDENTIFIER  desplazar e ir al estado 338

    incremento  ir al estado 339
    asignacion  ir al estado 340


Estado 304

   34 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' • incremento ')' bloque_for
   35              | TOKEN_FOR '(' declaracion_var ';' expr ';' • incremento ')' instruccion_simple
   36              | TOKEN_FOR '(' declaracion_var ';' expr ';' • ')' bloque_for
   37              | TOKEN_FOR '(' declaracion_var ';' expr ';' • ')' instruccion_simple

    TOKEN_IDENTIFIER  desplazar e ir al estado 338
    ')'               desplazar e ir al estado 341

    incremento  ir al estado 342
    asignacion  ir al estado 340


Estado 305

  198 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER • ')' bloque

    ')'  desplazar e ir al estado 343


Estado 306

  199 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER • ':' TOKEN_IDENTIFIER ')' bloque

    ':'  desplazar e ir al estado 344


Estado 307

  187 main_param: tipoPrimitivo • main_param_array_brackets TOKEN_IDENTIFIER

    $default  reduce usando la regla 188 (main_param_array_brackets)

    main_param_array_brackets  ir al estado 345


Estado 308

  182 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt • ')' bloque

    ')'  desplazar e ir al estado 346


Estado 309

  184 main_params_opt: main_params •
  186 main_params: main_params • ',' main_param

    ','  desplazar e ir al estado 347

    $default  reduce usando la regla 184 (main_params_opt)


Estado 310

  185 main_params: main_param •

    $default  reduce usando la regla 185 (main_params)


Estado 311

  148 postfix: postfix '.' TOKEN_IDENTIFIER '(' expr ')' •

    $default  reduce usando la regla 148 (postfix)


Estado 312

  147 postfix: postfix '.' TOKEN_ADD '(' expr ')' •

    $default  reduce usando la regla 147 (postfix)


Estado 313

  194 lista_parametros: tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER •

    $default  reduce usando la regla 194 (lista_parametros)


Estado 314

  193 param_array_brackets: param_array_brackets '[' • ']'

    ']'  desplazar e ir al estado 348


Estado 315

  181 funcion_declaracion: tipoPrimitivo TOKEN_IDENTIFIER '(' param_opt ')' bloque •

    $default  reduce usando la regla 181 (funcion_declaracion)


Estado 316

  195 lista_parametros: lista_parametros ',' tipoPrimitivo • param_array_brackets TOKEN_IDENTIFIER

    $default  reduce usando la regla 192 (param_array_brackets)

    param_array_brackets  ir al estado 349


Estado 317

   99 array_prefix_init_opt: '=' TOKEN_NEW • tipoPrimitivo dims_expr_list

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 19

    tipoPrimitivo  ir al estado 350


Estado 318

  100 array_prefix_init_opt: '=' '{' • lista_Expr '}'
  101                      | '=' '{' • filas_lista '}'
  102                      | '=' '{' • lista_bloques2D '}'
  103                      | '=' '{' • '}'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '}'                     desplazar e ir al estado 351
    '('                     desplazar e ir al estado 33
    '{'                     desplazar e ir al estado 352

    lista_Expr       ir al estado 353
    lista_bloques2D  ir al estado 354
    bloque2D         ir al estado 355
    filas_lista      ir al estado 356
    fila_matriz      ir al estado 357
    expr             ir al estado 125
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 319

  104 array_prefix_init_opt: '=' expr •
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180

    $default  reduce usando la regla 104 (array_prefix_init_opt)


Estado 320

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  163 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' expr • ')'
  165 join_variadic_args: expr • ',' lista_Expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 358
    ','                  desplazar e ir al estado 359


Estado 321

  164 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' join_variadic_args • ')'

    ')'  desplazar e ir al estado 360


Estado 322

  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr
  158 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' expr ',' expr • ')'

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ')'                  desplazar e ir al estado 361


Estado 323

   28 if_statement: TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE • bloque
   29             | TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE • if_statement

    TOKEN_IF  desplazar e ir al estado 25
    '{'       desplazar e ir al estado 34

    if_statement  ir al estado 362
    bloque        ir al estado 363


Estado 324

   26 if_statement: TOKEN_IF '(' expr ')' bloque TOKEN_ELSE if_statement •

    $default  reduce usando la regla 26 (if_statement)


Estado 325

   25 if_statement: TOKEN_IF '(' expr ')' bloque TOKEN_ELSE bloque •

    $default  reduce usando la regla 25 (if_statement)


Estado 326

   45 case_labels: TOKEN_CASE expr • ':'
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ':'                  desplazar e ir al estado 364


Estado 327

   55 default_case: TOKEN_DEFAULT • ':' instrucciones_case
   56             | TOKEN_DEFAULT • ':' instrucciones_case TOKEN_BREAK ';'

    ':'  desplazar e ir al estado 365


Estado 328

   30 switch_statement: TOKEN_SWITCH '(' expr ')' '{' case_list '}' •

    $default  reduce usando la regla 30 (switch_statement)


Estado 329

   44 case_list: case_list case_item •

    $default  reduce usando la regla 44 (case_list)


Estado 330

   31 switch_statement: TOKEN_SWITCH '(' expr ')' '{' case_list default_case • '}'

    '}'  desplazar e ir al estado 366


Estado 331

   46 case_labels: case_labels TOKEN_CASE • expr ':'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 367
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 332

   47 case_item: case_labels instrucciones_case •
   48          | case_labels instrucciones_case • TOKEN_BREAK ';'
   50 instrucciones_case: instrucciones_case • instruccion_case

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 157
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    TOKEN_BREAK               desplazar e ir al estado 368
    '{'                       desplazar e ir al estado 34

    $default  reduce usando la regla 47 (case_item)

    instruccion_case          ir al estado 369
    asignacion                ir al estado 334
    imprimir                  ir al estado 335
    bloque                    ir al estado 336
    declaracion_var           ir al estado 337
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    tipoPrimitivo             ir al estado 268


Estado 333

   49 instrucciones_case: instruccion_case •

    $default  reduce usando la regla 49 (instrucciones_case)


Estado 334

   54 instruccion_case: asignacion • ';'

    ';'  desplazar e ir al estado 370


Estado 335

   51 instruccion_case: imprimir • ';'

    ';'  desplazar e ir al estado 371


Estado 336

   52 instruccion_case: bloque •

    $default  reduce usando la regla 52 (instruccion_case)


Estado 337

   53 instruccion_case: declaracion_var • ';'

    ';'  desplazar e ir al estado 372


Estado 338

   41 incremento: TOKEN_IDENTIFIER • TOKEN_PLUS_PLUS
   42           | TOKEN_IDENTIFIER • TOKEN_MINUS_MINUS
   62 asignacion: TOKEN_IDENTIFIER • '=' expr
   63           | TOKEN_IDENTIFIER • TOKEN_PLUS_ASSIGN expr
   64           | TOKEN_IDENTIFIER • TOKEN_MINUS_ASSIGN expr
   65           | TOKEN_IDENTIFIER • TOKEN_MUL_ASSIGN expr
   66           | TOKEN_IDENTIFIER • TOKEN_DIV_ASSIGN expr
   67           | TOKEN_IDENTIFIER • TOKEN_MOD_ASSIGN expr
   68           | TOKEN_IDENTIFIER • TOKEN_AND_ASSIGN expr
   69           | TOKEN_IDENTIFIER • TOKEN_OR_ASSIGN expr
   70           | TOKEN_IDENTIFIER • TOKEN_XOR_ASSIGN expr
   71           | TOKEN_IDENTIFIER • TOKEN_SHL_ASSIGN expr
   72           | TOKEN_IDENTIFIER • TOKEN_SHR_ASSIGN expr

    TOKEN_PLUS_PLUS     desplazar e ir al estado 373
    TOKEN_MINUS_MINUS   desplazar e ir al estado 374
    TOKEN_PLUS_ASSIGN   desplazar e ir al estado 71
    TOKEN_MINUS_ASSIGN  desplazar e ir al estado 72
    TOKEN_MUL_ASSIGN    desplazar e ir al estado 73
    TOKEN_DIV_ASSIGN    desplazar e ir al estado 74
    TOKEN_MOD_ASSIGN    desplazar e ir al estado 75
    TOKEN_AND_ASSIGN    desplazar e ir al estado 76
    TOKEN_OR_ASSIGN     desplazar e ir al estado 77
    TOKEN_XOR_ASSIGN    desplazar e ir al estado 78
    TOKEN_SHL_ASSIGN    desplazar e ir al estado 79
    TOKEN_SHR_ASSIGN    desplazar e ir al estado 80
    '='                 desplazar e ir al estado 82


Estado 339

   38 for_statement: TOKEN_FOR '(' asignacion ';' expr ';' incremento • ')' bloque
   39              | TOKEN_FOR '(' asignacion ';' expr ';' incremento • ')' instruccion_simple

    ')'  desplazar e ir al estado 375


Estado 340

   40 incremento: asignacion •

    $default  reduce usando la regla 40 (incremento)


Estado 341

   36 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' ')' • bloque_for
   37              | TOKEN_FOR '(' declaracion_var ';' expr ';' ')' • instruccion_simple

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 157
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    '{'                       desplazar e ir al estado 376

    instruccion_simple        ir al estado 377
    asignacion                ir al estado 264
    imprimir                  ir al estado 265
    bloque_for                ir al estado 378
    declaracion_var           ir al estado 267
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    tipoPrimitivo             ir al estado 268


Estado 342

   34 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' incremento • ')' bloque_for
   35              | TOKEN_FOR '(' declaracion_var ';' expr ';' incremento • ')' instruccion_simple

    ')'  desplazar e ir al estado 379


Estado 343

  198 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' • bloque

    '{'  desplazar e ir al estado 34

    bloque  ir al estado 380


Estado 344

  199 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' • TOKEN_IDENTIFIER ')' bloque

    TOKEN_IDENTIFIER  desplazar e ir al estado 381


Estado 345

  187 main_param: tipoPrimitivo main_param_array_brackets • TOKEN_IDENTIFIER
  189 main_param_array_brackets: main_param_array_brackets • '[' ']'

    TOKEN_IDENTIFIER  desplazar e ir al estado 382
    '['               desplazar e ir al estado 383


Estado 346

  182 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt ')' • bloque

    '{'  desplazar e ir al estado 34

    bloque  ir al estado 384


Estado 347

  186 main_params: main_params ',' • main_param

    TOKEN_DINT      desplazar e ir al estado 3
    TOKEN_DFLOAT    desplazar e ir al estado 4
    TOKEN_DDOUBLE   desplazar e ir al estado 5
    TOKEN_DSTRING   desplazar e ir al estado 86
    TOKEN_DBOOLEAN  desplazar e ir al estado 14
    TOKEN_DCHAR     desplazar e ir al estado 15
    TOKEN_DVOID     desplazar e ir al estado 19

    tipoPrimitivo  ir al estado 307
    main_param     ir al estado 385


Estado 348

  193 param_array_brackets: param_array_brackets '[' ']' •

    $default  reduce usando la regla 193 (param_array_brackets)


Estado 349

  193 param_array_brackets: param_array_brackets • '[' ']'
  195 lista_parametros: lista_parametros ',' tipoPrimitivo param_array_brackets • TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  desplazar e ir al estado 386
    '['               desplazar e ir al estado 314


Estado 350

   99 array_prefix_init_opt: '=' TOKEN_NEW tipoPrimitivo • dims_expr_list

    '['  desplazar e ir al estado 387

    dims_expr_list  ir al estado 388


Estado 351

  103 array_prefix_init_opt: '=' '{' '}' •

    $default  reduce usando la regla 103 (array_prefix_init_opt)


Estado 352

  114 bloque2D: '{' • filas_lista '}'
  117 fila_matriz: '{' • lista_Expr '}'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33
    '{'                     desplazar e ir al estado 389

    lista_Expr       ir al estado 390
    filas_lista      ir al estado 391
    fila_matriz      ir al estado 357
    expr             ir al estado 125
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 353

   73 lista_Expr: lista_Expr • ',' expr
  100 array_prefix_init_opt: '=' '{' lista_Expr • '}'

    '}'  desplazar e ir al estado 392
    ','  desplazar e ir al estado 199


Estado 354

  102 array_prefix_init_opt: '=' '{' lista_bloques2D • '}'
  113 lista_bloques2D: lista_bloques2D • ',' bloque2D

    '}'  desplazar e ir al estado 393
    ','  desplazar e ir al estado 394


Estado 355

  112 lista_bloques2D: bloque2D •

    $default  reduce usando la regla 112 (lista_bloques2D)


Estado 356

  101 array_prefix_init_opt: '=' '{' filas_lista • '}'
  116 filas_lista: filas_lista • ',' fila_matriz

    '}'  desplazar e ir al estado 395
    ','  desplazar e ir al estado 396


Estado 357

  115 filas_lista: fila_matriz •

    $default  reduce usando la regla 115 (filas_lista)


Estado 358

  163 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' expr ')' •

    $default  reduce usando la regla 163 (atom)


Estado 359

  165 join_variadic_args: expr ',' • lista_Expr

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    lista_Expr       ir al estado 397
    expr             ir al estado 125
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 360

  164 atom: TOKEN_DSTRING '.' TOKEN_JOIN '(' expr ',' join_variadic_args ')' •

    $default  reduce usando la regla 164 (atom)


Estado 361

  158 atom: TOKEN_ARRAYS '.' TOKEN_INDEXOF '(' expr ',' expr ')' •

    $default  reduce usando la regla 158 (atom)


Estado 362

   29 if_statement: TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE if_statement •

    $default  reduce usando la regla 29 (if_statement)


Estado 363

   28 if_statement: TOKEN_IF '(' expr ')' instruccion_simple ';' TOKEN_ELSE bloque •

    $default  reduce usando la regla 28 (if_statement)


Estado 364

   45 case_labels: TOKEN_CASE expr ':' •

    $default  reduce usando la regla 45 (case_labels)


Estado 365

   55 default_case: TOKEN_DEFAULT ':' • instrucciones_case
   56             | TOKEN_DEFAULT ':' • instrucciones_case TOKEN_BREAK ';'

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 157
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    '{'                       desplazar e ir al estado 34

    instrucciones_case        ir al estado 398
    instruccion_case          ir al estado 333
    asignacion                ir al estado 334
    imprimir                  ir al estado 335
    bloque                    ir al estado 336
    declaracion_var           ir al estado 337
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    tipoPrimitivo             ir al estado 268


Estado 366

   31 switch_statement: TOKEN_SWITCH '(' expr ')' '{' case_list default_case '}' •

    $default  reduce usando la regla 31 (switch_statement)


Estado 367

   46 case_labels: case_labels TOKEN_CASE expr • ':'
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ':'                  desplazar e ir al estado 399


Estado 368

   48 case_item: case_labels instrucciones_case TOKEN_BREAK • ';'

    ';'  desplazar e ir al estado 400


Estado 369

   50 instrucciones_case: instrucciones_case instruccion_case •

    $default  reduce usando la regla 50 (instrucciones_case)


Estado 370

   54 instruccion_case: asignacion ';' •

    $default  reduce usando la regla 54 (instruccion_case)


Estado 371

   51 instruccion_case: imprimir ';' •

    $default  reduce usando la regla 51 (instruccion_case)


Estado 372

   53 instruccion_case: declaracion_var ';' •

    $default  reduce usando la regla 53 (instruccion_case)


Estado 373

   41 incremento: TOKEN_IDENTIFIER TOKEN_PLUS_PLUS •

    $default  reduce usando la regla 41 (incremento)


Estado 374

   42 incremento: TOKEN_IDENTIFIER TOKEN_MINUS_MINUS •

    $default  reduce usando la regla 42 (incremento)


Estado 375

   38 for_statement: TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' • bloque
   39              | TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' • instruccion_simple

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 157
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    '{'                       desplazar e ir al estado 34

    instruccion_simple        ir al estado 401
    asignacion                ir al estado 264
    imprimir                  ir al estado 265
    bloque                    ir al estado 402
    declaracion_var           ir al estado 267
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    tipoPrimitivo             ir al estado 268


Estado 376

   80 bloque_for: '{' • lSentencia '}'

    error                     desplazar e ir al estado 1
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    TOKEN_NULL                desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 23
    TOKEN_ARRAYS              desplazar e ir al estado 24
    TOKEN_IF                  desplazar e ir al estado 25
    TOKEN_SWITCH              desplazar e ir al estado 26
    TOKEN_BREAK               desplazar e ir al estado 27
    TOKEN_WHILE               desplazar e ir al estado 28
    TOKEN_FOR                 desplazar e ir al estado 29
    TOKEN_CONTINUE            desplazar e ir al estado 30
    TOKEN_RETURN              desplazar e ir al estado 31
    TOKEN_PUBLIC              desplazar e ir al estado 32
    '('                       desplazar e ir al estado 33
    '{'                       desplazar e ir al estado 34

    lSentencia                ir al estado 403
    instruccion               ir al estado 37
    if_statement              ir al estado 38
    switch_statement          ir al estado 39
    while_statement           ir al estado 40
    for_statement             ir al estado 41
    break_statement           ir al estado 42
    continue_statement        ir al estado 43
    asignacion                ir al estado 44
    imprimir                  ir al estado 45
    bloque                    ir al estado 46
    declaracion_var           ir al estado 47
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    asignacion_elemento       ir al estado 54
    postfix                   ir al estado 55
    unary                     ir al estado 56
    atom                      ir al estado 57
    primitivo                 ir al estado 58
    tipoPrimitivo             ir al estado 59
    funcion_declaracion       ir al estado 60
    main_declaracion          ir al estado 61
    return_stmt               ir al estado 62
    for_each_statement        ir al estado 63
    llamada_funcion           ir al estado 64


Estado 377

   37 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' ')' instruccion_simple •

    $default  reduce usando la regla 37 (for_statement)


Estado 378

   36 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' ')' bloque_for •

    $default  reduce usando la regla 36 (for_statement)


Estado 379

   34 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' • bloque_for
   35              | TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' • instruccion_simple

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 157
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    '{'                       desplazar e ir al estado 376

    instruccion_simple        ir al estado 404
    asignacion                ir al estado 264
    imprimir                  ir al estado 265
    bloque_for                ir al estado 405
    declaracion_var           ir al estado 267
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    tipoPrimitivo             ir al estado 268


Estado 380

  198 for_each_statement: TOKEN_FOR '(' tipoPrimitivo TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque •

    $default  reduce usando la regla 198 (for_each_statement)


Estado 381

  199 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER • ')' bloque

    ')'  desplazar e ir al estado 406


Estado 382

  187 main_param: tipoPrimitivo main_param_array_brackets TOKEN_IDENTIFIER •

    $default  reduce usando la regla 187 (main_param)


Estado 383

  189 main_param_array_brackets: main_param_array_brackets '[' • ']'

    ']'  desplazar e ir al estado 407


Estado 384

  182 main_declaracion: TOKEN_PUBLIC TOKEN_STATIC TOKEN_DVOID TOKEN_IDENTIFIER '(' main_params_opt ')' bloque •

    $default  reduce usando la regla 182 (main_declaracion)


Estado 385

  186 main_params: main_params ',' main_param •

    $default  reduce usando la regla 186 (main_params)


Estado 386

  195 lista_parametros: lista_parametros ',' tipoPrimitivo param_array_brackets TOKEN_IDENTIFIER •

    $default  reduce usando la regla 195 (lista_parametros)


Estado 387

  110 dims_expr_list: '[' • expr ']'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 408
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 388

   99 array_prefix_init_opt: '=' TOKEN_NEW tipoPrimitivo dims_expr_list •
  111 dims_expr_list: dims_expr_list • '[' expr ']'

    '['  desplazar e ir al estado 409

    $default  reduce usando la regla 99 (array_prefix_init_opt)


Estado 389

  117 fila_matriz: '{' • lista_Expr '}'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    lista_Expr       ir al estado 390
    expr             ir al estado 125
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 390

   73 lista_Expr: lista_Expr • ',' expr
  117 fila_matriz: '{' lista_Expr • '}'

    '}'  desplazar e ir al estado 410
    ','  desplazar e ir al estado 199


Estado 391

  114 bloque2D: '{' filas_lista • '}'
  116 filas_lista: filas_lista • ',' fila_matriz

    '}'  desplazar e ir al estado 411
    ','  desplazar e ir al estado 396


Estado 392

  100 array_prefix_init_opt: '=' '{' lista_Expr '}' •

    $default  reduce usando la regla 100 (array_prefix_init_opt)


Estado 393

  102 array_prefix_init_opt: '=' '{' lista_bloques2D '}' •

    $default  reduce usando la regla 102 (array_prefix_init_opt)


Estado 394

  113 lista_bloques2D: lista_bloques2D ',' • bloque2D

    '{'  desplazar e ir al estado 412

    bloque2D  ir al estado 413


Estado 395

  101 array_prefix_init_opt: '=' '{' filas_lista '}' •

    $default  reduce usando la regla 101 (array_prefix_init_opt)


Estado 396

  116 filas_lista: filas_lista ',' • fila_matriz

    '{'  desplazar e ir al estado 389

    fila_matriz  ir al estado 414


Estado 397

   73 lista_Expr: lista_Expr • ',' expr
  165 join_variadic_args: expr ',' lista_Expr •

    ','  desplazar e ir al estado 199

    $default  reduce usando la regla 165 (join_variadic_args)


Estado 398

   50 instrucciones_case: instrucciones_case • instruccion_case
   55 default_case: TOKEN_DEFAULT ':' instrucciones_case •
   56             | TOKEN_DEFAULT ':' instrucciones_case • TOKEN_BREAK ';'

    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 86
    TOKEN_IDENTIFIER          desplazar e ir al estado 157
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    TOKEN_BREAK               desplazar e ir al estado 415
    '{'                       desplazar e ir al estado 34

    $default  reduce usando la regla 55 (default_case)

    instruccion_case          ir al estado 369
    asignacion                ir al estado 334
    imprimir                  ir al estado 335
    bloque                    ir al estado 336
    declaracion_var           ir al estado 337
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    tipoPrimitivo             ir al estado 268


Estado 399

   46 case_labels: case_labels TOKEN_CASE expr ':' •

    $default  reduce usando la regla 46 (case_labels)


Estado 400

   48 case_item: case_labels instrucciones_case TOKEN_BREAK ';' •

    $default  reduce usando la regla 48 (case_item)


Estado 401

   39 for_statement: TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' instruccion_simple •

    $default  reduce usando la regla 39 (for_statement)


Estado 402

   38 for_statement: TOKEN_FOR '(' asignacion ';' expr ';' incremento ')' bloque •

    $default  reduce usando la regla 38 (for_statement)


Estado 403

    2 lSentencia: lSentencia • instruccion
    4           | lSentencia • error '}'
   80 bloque_for: '{' lSentencia • '}'

    error                     desplazar e ir al estado 111
    TOKEN_PRINT               desplazar e ir al estado 2
    TOKEN_DINT                desplazar e ir al estado 3
    TOKEN_DFLOAT              desplazar e ir al estado 4
    TOKEN_DDOUBLE             desplazar e ir al estado 5
    TOKEN_DSTRING             desplazar e ir al estado 6
    TOKEN_UNSIGNED_INTEGER    desplazar e ir al estado 7
    TOKEN_REAL                desplazar e ir al estado 8
    TOKEN_REAL_FLOAT          desplazar e ir al estado 9
    TOKEN_STRING              desplazar e ir al estado 10
    TOKEN_IDENTIFIER          desplazar e ir al estado 11
    TOKEN_TRUE                desplazar e ir al estado 12
    TOKEN_FALSE               desplazar e ir al estado 13
    TOKEN_DBOOLEAN            desplazar e ir al estado 14
    TOKEN_DCHAR               desplazar e ir al estado 15
    TOKEN_CHAR_LITERAL        desplazar e ir al estado 16
    TOKEN_FINAL               desplazar e ir al estado 17
    TOKEN_SYSTEM_OUT_PRINTLN  desplazar e ir al estado 18
    TOKEN_DVOID               desplazar e ir al estado 19
    TOKEN_NULL                desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS       desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS        desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS         desplazar e ir al estado 23
    TOKEN_ARRAYS              desplazar e ir al estado 24
    TOKEN_IF                  desplazar e ir al estado 25
    TOKEN_SWITCH              desplazar e ir al estado 26
    TOKEN_BREAK               desplazar e ir al estado 27
    TOKEN_WHILE               desplazar e ir al estado 28
    TOKEN_FOR                 desplazar e ir al estado 29
    TOKEN_CONTINUE            desplazar e ir al estado 30
    TOKEN_RETURN              desplazar e ir al estado 31
    TOKEN_PUBLIC              desplazar e ir al estado 32
    '}'                       desplazar e ir al estado 416
    '('                       desplazar e ir al estado 33
    '{'                       desplazar e ir al estado 34

    instruccion               ir al estado 112
    if_statement              ir al estado 38
    switch_statement          ir al estado 39
    while_statement           ir al estado 40
    for_statement             ir al estado 41
    break_statement           ir al estado 42
    continue_statement        ir al estado 43
    asignacion                ir al estado 44
    imprimir                  ir al estado 45
    bloque                    ir al estado 46
    declaracion_var           ir al estado 47
    prefix_array_decl         ir al estado 48
    postfix_array_decl        ir al estado 49
    final_prefix_array_decl   ir al estado 50
    final_postfix_array_decl  ir al estado 51
    var_decl                  ir al estado 52
    final_var_decl            ir al estado 53
    asignacion_elemento       ir al estado 54
    postfix                   ir al estado 55
    unary                     ir al estado 56
    atom                      ir al estado 57
    primitivo                 ir al estado 58
    tipoPrimitivo             ir al estado 59
    funcion_declaracion       ir al estado 60
    main_declaracion          ir al estado 61
    return_stmt               ir al estado 62
    for_each_statement        ir al estado 63
    llamada_funcion           ir al estado 64


Estado 404

   35 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' instruccion_simple •

    $default  reduce usando la regla 35 (for_statement)


Estado 405

   34 for_statement: TOKEN_FOR '(' declaracion_var ';' expr ';' incremento ')' bloque_for •

    $default  reduce usando la regla 34 (for_statement)


Estado 406

  199 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' • bloque

    '{'  desplazar e ir al estado 34

    bloque  ir al estado 417


Estado 407

  189 main_param_array_brackets: main_param_array_brackets '[' ']' •

    $default  reduce usando la regla 189 (main_param_array_brackets)


Estado 408

  110 dims_expr_list: '[' expr • ']'
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ']'                  desplazar e ir al estado 418


Estado 409

  111 dims_expr_list: dims_expr_list '[' • expr ']'

    TOKEN_DSTRING           desplazar e ir al estado 99
    TOKEN_UNSIGNED_INTEGER  desplazar e ir al estado 7
    TOKEN_REAL              desplazar e ir al estado 8
    TOKEN_REAL_FLOAT        desplazar e ir al estado 9
    TOKEN_STRING            desplazar e ir al estado 10
    TOKEN_IDENTIFIER        desplazar e ir al estado 100
    TOKEN_TRUE              desplazar e ir al estado 12
    TOKEN_FALSE             desplazar e ir al estado 13
    TOKEN_CHAR_LITERAL      desplazar e ir al estado 16
    TOKEN_NULL              desplazar e ir al estado 20
    TOKEN_INTEGER_CLASS     desplazar e ir al estado 21
    TOKEN_DOUBLE_CLASS      desplazar e ir al estado 22
    TOKEN_FLOAT_CLASS       desplazar e ir al estado 23
    TOKEN_ARRAYS            desplazar e ir al estado 24
    TOKEN_NOT               desplazar e ir al estado 101
    '-'                     desplazar e ir al estado 102
    '('                     desplazar e ir al estado 33

    expr             ir al estado 419
    postfix          ir al estado 104
    unary            ir al estado 56
    atom             ir al estado 57
    primitivo        ir al estado 58
    llamada_funcion  ir al estado 64


Estado 410

  117 fila_matriz: '{' lista_Expr '}' •

    $default  reduce usando la regla 117 (fila_matriz)


Estado 411

  114 bloque2D: '{' filas_lista '}' •

    $default  reduce usando la regla 114 (bloque2D)


Estado 412

  114 bloque2D: '{' • filas_lista '}'

    '{'  desplazar e ir al estado 389

    filas_lista  ir al estado 391
    fila_matriz  ir al estado 357


Estado 413

  113 lista_bloques2D: lista_bloques2D ',' bloque2D •

    $default  reduce usando la regla 113 (lista_bloques2D)


Estado 414

  116 filas_lista: filas_lista ',' fila_matriz •

    $default  reduce usando la regla 116 (filas_lista)


Estado 415

   56 default_case: TOKEN_DEFAULT ':' instrucciones_case TOKEN_BREAK • ';'

    ';'  desplazar e ir al estado 420


Estado 416

   80 bloque_for: '{' lSentencia '}' •

    $default  reduce usando la regla 80 (bloque_for)


Estado 417

  199 for_each_statement: TOKEN_FOR '(' tipoPrimitivo '[' ']' TOKEN_IDENTIFIER ':' TOKEN_IDENTIFIER ')' bloque •

    $default  reduce usando la regla 199 (for_each_statement)


Estado 418

  110 dims_expr_list: '[' expr ']' •

    $default  reduce usando la regla 110 (dims_expr_list)


Estado 419

  111 dims_expr_list: dims_expr_list '[' expr • ']'
  123 expr: expr • '+' expr
  124     | expr • '-' expr
  125     | expr • '*' expr
  126     | expr • '/' expr
  127     | expr • '%' expr
  128     | expr • '&' expr
  129     | expr • '|' expr
  130     | expr • '^' expr
  131     | expr • TOKEN_SHIFT_LEFT expr
  132     | expr • TOKEN_SHIFT_RIGHT expr
  133     | expr • TOKEN_EQUAL expr
  134     | expr • TOKEN_NOT_EQUAL expr
  135     | expr • TOKEN_GREATER expr
  136     | expr • TOKEN_LESS expr
  137     | expr • TOKEN_GREATER_EQUAL expr
  138     | expr • TOKEN_LESS_EQUAL expr
  139     | expr • TOKEN_AND expr
  140     | expr • TOKEN_OR expr

    TOKEN_SHIFT_LEFT     desplazar e ir al estado 163
    TOKEN_SHIFT_RIGHT    desplazar e ir al estado 164
    TOKEN_EQUAL          desplazar e ir al estado 165
    TOKEN_NOT_EQUAL      desplazar e ir al estado 166
    TOKEN_GREATER        desplazar e ir al estado 167
    TOKEN_LESS           desplazar e ir al estado 168
    TOKEN_GREATER_EQUAL  desplazar e ir al estado 169
    TOKEN_LESS_EQUAL     desplazar e ir al estado 170
    TOKEN_AND            desplazar e ir al estado 171
    TOKEN_OR             desplazar e ir al estado 172
    '+'                  desplazar e ir al estado 173
    '-'                  desplazar e ir al estado 174
    '&'                  desplazar e ir al estado 175
    '^'                  desplazar e ir al estado 176
    '|'                  desplazar e ir al estado 177
    '*'                  desplazar e ir al estado 178
    '/'                  desplazar e ir al estado 179
    '%'                  desplazar e ir al estado 180
    ']'                  desplazar e ir al estado 421


Estado 420

   56 default_case: TOKEN_DEFAULT ':' instrucciones_case TOKEN_BREAK ';' •

    $default  reduce usando la regla 56 (default_case)


Estado 421

  111 dims_expr_list: dims_expr_list '[' expr ']' •

    $default  reduce usando la regla 111 (dims_expr_list)
